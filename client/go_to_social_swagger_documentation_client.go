// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/owu-one/gotosocial-sdk/client/accounts"
	"github.com/owu-one/gotosocial-sdk/client/admin"
	"github.com/owu-one/gotosocial-sdk/client/apps"
	"github.com/owu-one/gotosocial-sdk/client/blocks"
	"github.com/owu-one/gotosocial-sdk/client/bookmarks"
	"github.com/owu-one/gotosocial-sdk/client/conversations"
	"github.com/owu-one/gotosocial-sdk/client/custom_emojis"
	"github.com/owu-one/gotosocial-sdk/client/debug"
	"github.com/owu-one/gotosocial-sdk/client/favourites"
	"github.com/owu-one/gotosocial-sdk/client/featured_tags"
	"github.com/owu-one/gotosocial-sdk/client/federation"
	"github.com/owu-one/gotosocial-sdk/client/filters"
	"github.com/owu-one/gotosocial-sdk/client/follow_requests"
	"github.com/owu-one/gotosocial-sdk/client/health"
	"github.com/owu-one/gotosocial-sdk/client/instance"
	"github.com/owu-one/gotosocial-sdk/client/lists"
	"github.com/owu-one/gotosocial-sdk/client/markers"
	"github.com/owu-one/gotosocial-sdk/client/media"
	"github.com/owu-one/gotosocial-sdk/client/mutes"
	"github.com/owu-one/gotosocial-sdk/client/nodeinfo"
	"github.com/owu-one/gotosocial-sdk/client/notifications"
	"github.com/owu-one/gotosocial-sdk/client/nr_well_known"
	"github.com/owu-one/gotosocial-sdk/client/polls"
	"github.com/owu-one/gotosocial-sdk/client/preferences"
	"github.com/owu-one/gotosocial-sdk/client/reports"
	"github.com/owu-one/gotosocial-sdk/client/search"
	"github.com/owu-one/gotosocial-sdk/client/statuses"
	"github.com/owu-one/gotosocial-sdk/client/streaming"
	"github.com/owu-one/gotosocial-sdk/client/timelines"
	"github.com/owu-one/gotosocial-sdk/client/user"
)

// Default go to social swagger documentation HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "example.org"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http", "https", "wss"}

// NewHTTPClient creates a new go to social swagger documentation HTTP client.
func NewHTTPClient(formats strfmt.Registry) *GoToSocialSwaggerDocumentation {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new go to social swagger documentation HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *GoToSocialSwaggerDocumentation {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new go to social swagger documentation client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *GoToSocialSwaggerDocumentation {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(GoToSocialSwaggerDocumentation)
	cli.Transport = transport
	cli.Accounts = accounts.New(transport, formats)
	cli.Admin = admin.New(transport, formats)
	cli.Apps = apps.New(transport, formats)
	cli.Blocks = blocks.New(transport, formats)
	cli.Bookmarks = bookmarks.New(transport, formats)
	cli.Conversations = conversations.New(transport, formats)
	cli.CustomEmojis = custom_emojis.New(transport, formats)
	cli.Debug = debug.New(transport, formats)
	cli.Favourites = favourites.New(transport, formats)
	cli.FeaturedTags = featured_tags.New(transport, formats)
	cli.Federation = federation.New(transport, formats)
	cli.Filters = filters.New(transport, formats)
	cli.FollowRequests = follow_requests.New(transport, formats)
	cli.Health = health.New(transport, formats)
	cli.Instance = instance.New(transport, formats)
	cli.Lists = lists.New(transport, formats)
	cli.Markers = markers.New(transport, formats)
	cli.Media = media.New(transport, formats)
	cli.Mutes = mutes.New(transport, formats)
	cli.Nodeinfo = nodeinfo.New(transport, formats)
	cli.Notifications = notifications.New(transport, formats)
	cli.NrWellKnown = nr_well_known.New(transport, formats)
	cli.Polls = polls.New(transport, formats)
	cli.Preferences = preferences.New(transport, formats)
	cli.Reports = reports.New(transport, formats)
	cli.Search = search.New(transport, formats)
	cli.Statuses = statuses.New(transport, formats)
	cli.Streaming = streaming.New(transport, formats)
	cli.Timelines = timelines.New(transport, formats)
	cli.User = user.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// GoToSocialSwaggerDocumentation is a client for go to social swagger documentation
type GoToSocialSwaggerDocumentation struct {
	Accounts accounts.ClientService

	Admin admin.ClientService

	Apps apps.ClientService

	Blocks blocks.ClientService

	Bookmarks bookmarks.ClientService

	Conversations conversations.ClientService

	CustomEmojis custom_emojis.ClientService

	Debug debug.ClientService

	Favourites favourites.ClientService

	FeaturedTags featured_tags.ClientService

	Federation federation.ClientService

	Filters filters.ClientService

	FollowRequests follow_requests.ClientService

	Health health.ClientService

	Instance instance.ClientService

	Lists lists.ClientService

	Markers markers.ClientService

	Media media.ClientService

	Mutes mutes.ClientService

	Nodeinfo nodeinfo.ClientService

	Notifications notifications.ClientService

	NrWellKnown nr_well_known.ClientService

	Polls polls.ClientService

	Preferences preferences.ClientService

	Reports reports.ClientService

	Search search.ClientService

	Statuses statuses.ClientService

	Streaming streaming.ClientService

	Timelines timelines.ClientService

	User user.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *GoToSocialSwaggerDocumentation) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Accounts.SetTransport(transport)
	c.Admin.SetTransport(transport)
	c.Apps.SetTransport(transport)
	c.Blocks.SetTransport(transport)
	c.Bookmarks.SetTransport(transport)
	c.Conversations.SetTransport(transport)
	c.CustomEmojis.SetTransport(transport)
	c.Debug.SetTransport(transport)
	c.Favourites.SetTransport(transport)
	c.FeaturedTags.SetTransport(transport)
	c.Federation.SetTransport(transport)
	c.Filters.SetTransport(transport)
	c.FollowRequests.SetTransport(transport)
	c.Health.SetTransport(transport)
	c.Instance.SetTransport(transport)
	c.Lists.SetTransport(transport)
	c.Markers.SetTransport(transport)
	c.Media.SetTransport(transport)
	c.Mutes.SetTransport(transport)
	c.Nodeinfo.SetTransport(transport)
	c.Notifications.SetTransport(transport)
	c.NrWellKnown.SetTransport(transport)
	c.Polls.SetTransport(transport)
	c.Preferences.SetTransport(transport)
	c.Reports.SetTransport(transport)
	c.Search.SetTransport(transport)
	c.Statuses.SetTransport(transport)
	c.Streaming.SetTransport(transport)
	c.Timelines.SetTransport(transport)
	c.User.SetTransport(transport)
}
