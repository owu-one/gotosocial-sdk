// Code generated by go-swagger; DO NOT EDIT.

package import_export

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ExportMutesReader is a Reader for the ExportMutes structure.
type ExportMutesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportMutesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportMutesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExportMutesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewExportMutesNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExportMutesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/exports/mutes.csv] exportMutes", response, response.Code())
	}
}

// NewExportMutesOK creates a ExportMutesOK with default headers values
func NewExportMutesOK() *ExportMutesOK {
	return &ExportMutesOK{}
}

/*
ExportMutesOK describes a response with status code 200, with default header values.

CSV file of accounts that you mute.
*/
type ExportMutesOK struct {
}

// IsSuccess returns true when this export mutes o k response has a 2xx status code
func (o *ExportMutesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export mutes o k response has a 3xx status code
func (o *ExportMutesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export mutes o k response has a 4xx status code
func (o *ExportMutesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export mutes o k response has a 5xx status code
func (o *ExportMutesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export mutes o k response a status code equal to that given
func (o *ExportMutesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export mutes o k response
func (o *ExportMutesOK) Code() int {
	return 200
}

func (o *ExportMutesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/mutes.csv][%d] exportMutesOK", 200)
}

func (o *ExportMutesOK) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/mutes.csv][%d] exportMutesOK", 200)
}

func (o *ExportMutesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportMutesUnauthorized creates a ExportMutesUnauthorized with default headers values
func NewExportMutesUnauthorized() *ExportMutesUnauthorized {
	return &ExportMutesUnauthorized{}
}

/*
ExportMutesUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ExportMutesUnauthorized struct {
}

// IsSuccess returns true when this export mutes unauthorized response has a 2xx status code
func (o *ExportMutesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export mutes unauthorized response has a 3xx status code
func (o *ExportMutesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export mutes unauthorized response has a 4xx status code
func (o *ExportMutesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this export mutes unauthorized response has a 5xx status code
func (o *ExportMutesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this export mutes unauthorized response a status code equal to that given
func (o *ExportMutesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the export mutes unauthorized response
func (o *ExportMutesUnauthorized) Code() int {
	return 401
}

func (o *ExportMutesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/mutes.csv][%d] exportMutesUnauthorized", 401)
}

func (o *ExportMutesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/mutes.csv][%d] exportMutesUnauthorized", 401)
}

func (o *ExportMutesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportMutesNotAcceptable creates a ExportMutesNotAcceptable with default headers values
func NewExportMutesNotAcceptable() *ExportMutesNotAcceptable {
	return &ExportMutesNotAcceptable{}
}

/*
ExportMutesNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type ExportMutesNotAcceptable struct {
}

// IsSuccess returns true when this export mutes not acceptable response has a 2xx status code
func (o *ExportMutesNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export mutes not acceptable response has a 3xx status code
func (o *ExportMutesNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export mutes not acceptable response has a 4xx status code
func (o *ExportMutesNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this export mutes not acceptable response has a 5xx status code
func (o *ExportMutesNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this export mutes not acceptable response a status code equal to that given
func (o *ExportMutesNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the export mutes not acceptable response
func (o *ExportMutesNotAcceptable) Code() int {
	return 406
}

func (o *ExportMutesNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/mutes.csv][%d] exportMutesNotAcceptable", 406)
}

func (o *ExportMutesNotAcceptable) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/mutes.csv][%d] exportMutesNotAcceptable", 406)
}

func (o *ExportMutesNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportMutesInternalServerError creates a ExportMutesInternalServerError with default headers values
func NewExportMutesInternalServerError() *ExportMutesInternalServerError {
	return &ExportMutesInternalServerError{}
}

/*
ExportMutesInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type ExportMutesInternalServerError struct {
}

// IsSuccess returns true when this export mutes internal server error response has a 2xx status code
func (o *ExportMutesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export mutes internal server error response has a 3xx status code
func (o *ExportMutesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export mutes internal server error response has a 4xx status code
func (o *ExportMutesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this export mutes internal server error response has a 5xx status code
func (o *ExportMutesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this export mutes internal server error response a status code equal to that given
func (o *ExportMutesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the export mutes internal server error response
func (o *ExportMutesInternalServerError) Code() int {
	return 500
}

func (o *ExportMutesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/mutes.csv][%d] exportMutesInternalServerError", 500)
}

func (o *ExportMutesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/mutes.csv][%d] exportMutesInternalServerError", 500)
}

func (o *ExportMutesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
