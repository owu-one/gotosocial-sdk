// Code generated by go-swagger; DO NOT EDIT.

package import_export

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ExportFollowingReader is a Reader for the ExportFollowing structure.
type ExportFollowingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportFollowingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportFollowingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExportFollowingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewExportFollowingNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExportFollowingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/exports/following.csv] exportFollowing", response, response.Code())
	}
}

// NewExportFollowingOK creates a ExportFollowingOK with default headers values
func NewExportFollowingOK() *ExportFollowingOK {
	return &ExportFollowingOK{}
}

/*
ExportFollowingOK describes a response with status code 200, with default header values.

CSV file of accounts that you follow.
*/
type ExportFollowingOK struct {
}

// IsSuccess returns true when this export following o k response has a 2xx status code
func (o *ExportFollowingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export following o k response has a 3xx status code
func (o *ExportFollowingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export following o k response has a 4xx status code
func (o *ExportFollowingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export following o k response has a 5xx status code
func (o *ExportFollowingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export following o k response a status code equal to that given
func (o *ExportFollowingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export following o k response
func (o *ExportFollowingOK) Code() int {
	return 200
}

func (o *ExportFollowingOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/following.csv][%d] exportFollowingOK", 200)
}

func (o *ExportFollowingOK) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/following.csv][%d] exportFollowingOK", 200)
}

func (o *ExportFollowingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportFollowingUnauthorized creates a ExportFollowingUnauthorized with default headers values
func NewExportFollowingUnauthorized() *ExportFollowingUnauthorized {
	return &ExportFollowingUnauthorized{}
}

/*
ExportFollowingUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ExportFollowingUnauthorized struct {
}

// IsSuccess returns true when this export following unauthorized response has a 2xx status code
func (o *ExportFollowingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export following unauthorized response has a 3xx status code
func (o *ExportFollowingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export following unauthorized response has a 4xx status code
func (o *ExportFollowingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this export following unauthorized response has a 5xx status code
func (o *ExportFollowingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this export following unauthorized response a status code equal to that given
func (o *ExportFollowingUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the export following unauthorized response
func (o *ExportFollowingUnauthorized) Code() int {
	return 401
}

func (o *ExportFollowingUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/following.csv][%d] exportFollowingUnauthorized", 401)
}

func (o *ExportFollowingUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/following.csv][%d] exportFollowingUnauthorized", 401)
}

func (o *ExportFollowingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportFollowingNotAcceptable creates a ExportFollowingNotAcceptable with default headers values
func NewExportFollowingNotAcceptable() *ExportFollowingNotAcceptable {
	return &ExportFollowingNotAcceptable{}
}

/*
ExportFollowingNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type ExportFollowingNotAcceptable struct {
}

// IsSuccess returns true when this export following not acceptable response has a 2xx status code
func (o *ExportFollowingNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export following not acceptable response has a 3xx status code
func (o *ExportFollowingNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export following not acceptable response has a 4xx status code
func (o *ExportFollowingNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this export following not acceptable response has a 5xx status code
func (o *ExportFollowingNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this export following not acceptable response a status code equal to that given
func (o *ExportFollowingNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the export following not acceptable response
func (o *ExportFollowingNotAcceptable) Code() int {
	return 406
}

func (o *ExportFollowingNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/following.csv][%d] exportFollowingNotAcceptable", 406)
}

func (o *ExportFollowingNotAcceptable) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/following.csv][%d] exportFollowingNotAcceptable", 406)
}

func (o *ExportFollowingNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportFollowingInternalServerError creates a ExportFollowingInternalServerError with default headers values
func NewExportFollowingInternalServerError() *ExportFollowingInternalServerError {
	return &ExportFollowingInternalServerError{}
}

/*
ExportFollowingInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type ExportFollowingInternalServerError struct {
}

// IsSuccess returns true when this export following internal server error response has a 2xx status code
func (o *ExportFollowingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export following internal server error response has a 3xx status code
func (o *ExportFollowingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export following internal server error response has a 4xx status code
func (o *ExportFollowingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this export following internal server error response has a 5xx status code
func (o *ExportFollowingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this export following internal server error response a status code equal to that given
func (o *ExportFollowingInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the export following internal server error response
func (o *ExportFollowingInternalServerError) Code() int {
	return 500
}

func (o *ExportFollowingInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/following.csv][%d] exportFollowingInternalServerError", 500)
}

func (o *ExportFollowingInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/following.csv][%d] exportFollowingInternalServerError", 500)
}

func (o *ExportFollowingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
