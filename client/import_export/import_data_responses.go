// Code generated by go-swagger; DO NOT EDIT.

package import_export

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ImportDataReader is a Reader for the ImportData structure.
type ImportDataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportDataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewImportDataAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportDataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportDataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewImportDataNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImportDataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/import] importData", response, response.Code())
	}
}

// NewImportDataAccepted creates a ImportDataAccepted with default headers values
func NewImportDataAccepted() *ImportDataAccepted {
	return &ImportDataAccepted{}
}

/*
ImportDataAccepted describes a response with status code 202, with default header values.

Upload accepted.
*/
type ImportDataAccepted struct {
}

// IsSuccess returns true when this import data accepted response has a 2xx status code
func (o *ImportDataAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import data accepted response has a 3xx status code
func (o *ImportDataAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import data accepted response has a 4xx status code
func (o *ImportDataAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this import data accepted response has a 5xx status code
func (o *ImportDataAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this import data accepted response a status code equal to that given
func (o *ImportDataAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the import data accepted response
func (o *ImportDataAccepted) Code() int {
	return 202
}

func (o *ImportDataAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v1/import][%d] importDataAccepted", 202)
}

func (o *ImportDataAccepted) String() string {
	return fmt.Sprintf("[POST /api/v1/import][%d] importDataAccepted", 202)
}

func (o *ImportDataAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDataBadRequest creates a ImportDataBadRequest with default headers values
func NewImportDataBadRequest() *ImportDataBadRequest {
	return &ImportDataBadRequest{}
}

/*
ImportDataBadRequest describes a response with status code 400, with default header values.

bad request
*/
type ImportDataBadRequest struct {
}

// IsSuccess returns true when this import data bad request response has a 2xx status code
func (o *ImportDataBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import data bad request response has a 3xx status code
func (o *ImportDataBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import data bad request response has a 4xx status code
func (o *ImportDataBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this import data bad request response has a 5xx status code
func (o *ImportDataBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this import data bad request response a status code equal to that given
func (o *ImportDataBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the import data bad request response
func (o *ImportDataBadRequest) Code() int {
	return 400
}

func (o *ImportDataBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/import][%d] importDataBadRequest", 400)
}

func (o *ImportDataBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/import][%d] importDataBadRequest", 400)
}

func (o *ImportDataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDataUnauthorized creates a ImportDataUnauthorized with default headers values
func NewImportDataUnauthorized() *ImportDataUnauthorized {
	return &ImportDataUnauthorized{}
}

/*
ImportDataUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ImportDataUnauthorized struct {
}

// IsSuccess returns true when this import data unauthorized response has a 2xx status code
func (o *ImportDataUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import data unauthorized response has a 3xx status code
func (o *ImportDataUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import data unauthorized response has a 4xx status code
func (o *ImportDataUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this import data unauthorized response has a 5xx status code
func (o *ImportDataUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this import data unauthorized response a status code equal to that given
func (o *ImportDataUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the import data unauthorized response
func (o *ImportDataUnauthorized) Code() int {
	return 401
}

func (o *ImportDataUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/import][%d] importDataUnauthorized", 401)
}

func (o *ImportDataUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v1/import][%d] importDataUnauthorized", 401)
}

func (o *ImportDataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDataNotAcceptable creates a ImportDataNotAcceptable with default headers values
func NewImportDataNotAcceptable() *ImportDataNotAcceptable {
	return &ImportDataNotAcceptable{}
}

/*
ImportDataNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type ImportDataNotAcceptable struct {
}

// IsSuccess returns true when this import data not acceptable response has a 2xx status code
func (o *ImportDataNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import data not acceptable response has a 3xx status code
func (o *ImportDataNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import data not acceptable response has a 4xx status code
func (o *ImportDataNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this import data not acceptable response has a 5xx status code
func (o *ImportDataNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this import data not acceptable response a status code equal to that given
func (o *ImportDataNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the import data not acceptable response
func (o *ImportDataNotAcceptable) Code() int {
	return 406
}

func (o *ImportDataNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /api/v1/import][%d] importDataNotAcceptable", 406)
}

func (o *ImportDataNotAcceptable) String() string {
	return fmt.Sprintf("[POST /api/v1/import][%d] importDataNotAcceptable", 406)
}

func (o *ImportDataNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportDataInternalServerError creates a ImportDataInternalServerError with default headers values
func NewImportDataInternalServerError() *ImportDataInternalServerError {
	return &ImportDataInternalServerError{}
}

/*
ImportDataInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type ImportDataInternalServerError struct {
}

// IsSuccess returns true when this import data internal server error response has a 2xx status code
func (o *ImportDataInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import data internal server error response has a 3xx status code
func (o *ImportDataInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import data internal server error response has a 4xx status code
func (o *ImportDataInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this import data internal server error response has a 5xx status code
func (o *ImportDataInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this import data internal server error response a status code equal to that given
func (o *ImportDataInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the import data internal server error response
func (o *ImportDataInternalServerError) Code() int {
	return 500
}

func (o *ImportDataInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/import][%d] importDataInternalServerError", 500)
}

func (o *ImportDataInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/import][%d] importDataInternalServerError", 500)
}

func (o *ImportDataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
