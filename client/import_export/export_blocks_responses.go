// Code generated by go-swagger; DO NOT EDIT.

package import_export

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ExportBlocksReader is a Reader for the ExportBlocks structure.
type ExportBlocksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportBlocksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportBlocksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExportBlocksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewExportBlocksNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExportBlocksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/exports/blocks.csv] exportBlocks", response, response.Code())
	}
}

// NewExportBlocksOK creates a ExportBlocksOK with default headers values
func NewExportBlocksOK() *ExportBlocksOK {
	return &ExportBlocksOK{}
}

/*
ExportBlocksOK describes a response with status code 200, with default header values.

CSV file of accounts that you block.
*/
type ExportBlocksOK struct {
}

// IsSuccess returns true when this export blocks o k response has a 2xx status code
func (o *ExportBlocksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export blocks o k response has a 3xx status code
func (o *ExportBlocksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export blocks o k response has a 4xx status code
func (o *ExportBlocksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export blocks o k response has a 5xx status code
func (o *ExportBlocksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export blocks o k response a status code equal to that given
func (o *ExportBlocksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export blocks o k response
func (o *ExportBlocksOK) Code() int {
	return 200
}

func (o *ExportBlocksOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/blocks.csv][%d] exportBlocksOK", 200)
}

func (o *ExportBlocksOK) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/blocks.csv][%d] exportBlocksOK", 200)
}

func (o *ExportBlocksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportBlocksUnauthorized creates a ExportBlocksUnauthorized with default headers values
func NewExportBlocksUnauthorized() *ExportBlocksUnauthorized {
	return &ExportBlocksUnauthorized{}
}

/*
ExportBlocksUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ExportBlocksUnauthorized struct {
}

// IsSuccess returns true when this export blocks unauthorized response has a 2xx status code
func (o *ExportBlocksUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export blocks unauthorized response has a 3xx status code
func (o *ExportBlocksUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export blocks unauthorized response has a 4xx status code
func (o *ExportBlocksUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this export blocks unauthorized response has a 5xx status code
func (o *ExportBlocksUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this export blocks unauthorized response a status code equal to that given
func (o *ExportBlocksUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the export blocks unauthorized response
func (o *ExportBlocksUnauthorized) Code() int {
	return 401
}

func (o *ExportBlocksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/blocks.csv][%d] exportBlocksUnauthorized", 401)
}

func (o *ExportBlocksUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/blocks.csv][%d] exportBlocksUnauthorized", 401)
}

func (o *ExportBlocksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportBlocksNotAcceptable creates a ExportBlocksNotAcceptable with default headers values
func NewExportBlocksNotAcceptable() *ExportBlocksNotAcceptable {
	return &ExportBlocksNotAcceptable{}
}

/*
ExportBlocksNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type ExportBlocksNotAcceptable struct {
}

// IsSuccess returns true when this export blocks not acceptable response has a 2xx status code
func (o *ExportBlocksNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export blocks not acceptable response has a 3xx status code
func (o *ExportBlocksNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export blocks not acceptable response has a 4xx status code
func (o *ExportBlocksNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this export blocks not acceptable response has a 5xx status code
func (o *ExportBlocksNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this export blocks not acceptable response a status code equal to that given
func (o *ExportBlocksNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the export blocks not acceptable response
func (o *ExportBlocksNotAcceptable) Code() int {
	return 406
}

func (o *ExportBlocksNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/blocks.csv][%d] exportBlocksNotAcceptable", 406)
}

func (o *ExportBlocksNotAcceptable) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/blocks.csv][%d] exportBlocksNotAcceptable", 406)
}

func (o *ExportBlocksNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportBlocksInternalServerError creates a ExportBlocksInternalServerError with default headers values
func NewExportBlocksInternalServerError() *ExportBlocksInternalServerError {
	return &ExportBlocksInternalServerError{}
}

/*
ExportBlocksInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type ExportBlocksInternalServerError struct {
}

// IsSuccess returns true when this export blocks internal server error response has a 2xx status code
func (o *ExportBlocksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export blocks internal server error response has a 3xx status code
func (o *ExportBlocksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export blocks internal server error response has a 4xx status code
func (o *ExportBlocksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this export blocks internal server error response has a 5xx status code
func (o *ExportBlocksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this export blocks internal server error response a status code equal to that given
func (o *ExportBlocksInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the export blocks internal server error response
func (o *ExportBlocksInternalServerError) Code() int {
	return 500
}

func (o *ExportBlocksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/blocks.csv][%d] exportBlocksInternalServerError", 500)
}

func (o *ExportBlocksInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/blocks.csv][%d] exportBlocksInternalServerError", 500)
}

func (o *ExportBlocksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
