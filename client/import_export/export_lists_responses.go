// Code generated by go-swagger; DO NOT EDIT.

package import_export

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ExportListsReader is a Reader for the ExportLists structure.
type ExportListsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportListsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportListsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExportListsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewExportListsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExportListsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/exports/lists.csv] exportLists", response, response.Code())
	}
}

// NewExportListsOK creates a ExportListsOK with default headers values
func NewExportListsOK() *ExportListsOK {
	return &ExportListsOK{}
}

/*
ExportListsOK describes a response with status code 200, with default header values.

CSV file of lists.
*/
type ExportListsOK struct {
}

// IsSuccess returns true when this export lists o k response has a 2xx status code
func (o *ExportListsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export lists o k response has a 3xx status code
func (o *ExportListsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export lists o k response has a 4xx status code
func (o *ExportListsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export lists o k response has a 5xx status code
func (o *ExportListsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export lists o k response a status code equal to that given
func (o *ExportListsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export lists o k response
func (o *ExportListsOK) Code() int {
	return 200
}

func (o *ExportListsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/lists.csv][%d] exportListsOK", 200)
}

func (o *ExportListsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/lists.csv][%d] exportListsOK", 200)
}

func (o *ExportListsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportListsUnauthorized creates a ExportListsUnauthorized with default headers values
func NewExportListsUnauthorized() *ExportListsUnauthorized {
	return &ExportListsUnauthorized{}
}

/*
ExportListsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ExportListsUnauthorized struct {
}

// IsSuccess returns true when this export lists unauthorized response has a 2xx status code
func (o *ExportListsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export lists unauthorized response has a 3xx status code
func (o *ExportListsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export lists unauthorized response has a 4xx status code
func (o *ExportListsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this export lists unauthorized response has a 5xx status code
func (o *ExportListsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this export lists unauthorized response a status code equal to that given
func (o *ExportListsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the export lists unauthorized response
func (o *ExportListsUnauthorized) Code() int {
	return 401
}

func (o *ExportListsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/lists.csv][%d] exportListsUnauthorized", 401)
}

func (o *ExportListsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/lists.csv][%d] exportListsUnauthorized", 401)
}

func (o *ExportListsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportListsNotAcceptable creates a ExportListsNotAcceptable with default headers values
func NewExportListsNotAcceptable() *ExportListsNotAcceptable {
	return &ExportListsNotAcceptable{}
}

/*
ExportListsNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type ExportListsNotAcceptable struct {
}

// IsSuccess returns true when this export lists not acceptable response has a 2xx status code
func (o *ExportListsNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export lists not acceptable response has a 3xx status code
func (o *ExportListsNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export lists not acceptable response has a 4xx status code
func (o *ExportListsNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this export lists not acceptable response has a 5xx status code
func (o *ExportListsNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this export lists not acceptable response a status code equal to that given
func (o *ExportListsNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the export lists not acceptable response
func (o *ExportListsNotAcceptable) Code() int {
	return 406
}

func (o *ExportListsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/lists.csv][%d] exportListsNotAcceptable", 406)
}

func (o *ExportListsNotAcceptable) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/lists.csv][%d] exportListsNotAcceptable", 406)
}

func (o *ExportListsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportListsInternalServerError creates a ExportListsInternalServerError with default headers values
func NewExportListsInternalServerError() *ExportListsInternalServerError {
	return &ExportListsInternalServerError{}
}

/*
ExportListsInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type ExportListsInternalServerError struct {
}

// IsSuccess returns true when this export lists internal server error response has a 2xx status code
func (o *ExportListsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export lists internal server error response has a 3xx status code
func (o *ExportListsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export lists internal server error response has a 4xx status code
func (o *ExportListsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this export lists internal server error response has a 5xx status code
func (o *ExportListsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this export lists internal server error response a status code equal to that given
func (o *ExportListsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the export lists internal server error response
func (o *ExportListsInternalServerError) Code() int {
	return 500
}

func (o *ExportListsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/exports/lists.csv][%d] exportListsInternalServerError", 500)
}

func (o *ExportListsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/exports/lists.csv][%d] exportListsInternalServerError", 500)
}

func (o *ExportListsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
