// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// TwoFactorDisablePostReader is a Reader for the TwoFactorDisablePost structure.
type TwoFactorDisablePostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TwoFactorDisablePostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTwoFactorDisablePostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewTwoFactorDisablePostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTwoFactorDisablePostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewTwoFactorDisablePostNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewTwoFactorDisablePostConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewTwoFactorDisablePostUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTwoFactorDisablePostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/user/2fa/disable] TwoFactorDisablePost", response, response.Code())
	}
}

// NewTwoFactorDisablePostOK creates a TwoFactorDisablePostOK with default headers values
func NewTwoFactorDisablePostOK() *TwoFactorDisablePostOK {
	return &TwoFactorDisablePostOK{}
}

/*
TwoFactorDisablePostOK describes a response with status code 200, with default header values.

QR code
*/
type TwoFactorDisablePostOK struct {
}

// IsSuccess returns true when this two factor disable post o k response has a 2xx status code
func (o *TwoFactorDisablePostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this two factor disable post o k response has a 3xx status code
func (o *TwoFactorDisablePostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this two factor disable post o k response has a 4xx status code
func (o *TwoFactorDisablePostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this two factor disable post o k response has a 5xx status code
func (o *TwoFactorDisablePostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this two factor disable post o k response a status code equal to that given
func (o *TwoFactorDisablePostOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the two factor disable post o k response
func (o *TwoFactorDisablePostOK) Code() int {
	return 200
}

func (o *TwoFactorDisablePostOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostOK", 200)
}

func (o *TwoFactorDisablePostOK) String() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostOK", 200)
}

func (o *TwoFactorDisablePostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTwoFactorDisablePostUnauthorized creates a TwoFactorDisablePostUnauthorized with default headers values
func NewTwoFactorDisablePostUnauthorized() *TwoFactorDisablePostUnauthorized {
	return &TwoFactorDisablePostUnauthorized{}
}

/*
TwoFactorDisablePostUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type TwoFactorDisablePostUnauthorized struct {
}

// IsSuccess returns true when this two factor disable post unauthorized response has a 2xx status code
func (o *TwoFactorDisablePostUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this two factor disable post unauthorized response has a 3xx status code
func (o *TwoFactorDisablePostUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this two factor disable post unauthorized response has a 4xx status code
func (o *TwoFactorDisablePostUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this two factor disable post unauthorized response has a 5xx status code
func (o *TwoFactorDisablePostUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this two factor disable post unauthorized response a status code equal to that given
func (o *TwoFactorDisablePostUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the two factor disable post unauthorized response
func (o *TwoFactorDisablePostUnauthorized) Code() int {
	return 401
}

func (o *TwoFactorDisablePostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostUnauthorized", 401)
}

func (o *TwoFactorDisablePostUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostUnauthorized", 401)
}

func (o *TwoFactorDisablePostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTwoFactorDisablePostForbidden creates a TwoFactorDisablePostForbidden with default headers values
func NewTwoFactorDisablePostForbidden() *TwoFactorDisablePostForbidden {
	return &TwoFactorDisablePostForbidden{}
}

/*
TwoFactorDisablePostForbidden describes a response with status code 403, with default header values.

forbidden
*/
type TwoFactorDisablePostForbidden struct {
}

// IsSuccess returns true when this two factor disable post forbidden response has a 2xx status code
func (o *TwoFactorDisablePostForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this two factor disable post forbidden response has a 3xx status code
func (o *TwoFactorDisablePostForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this two factor disable post forbidden response has a 4xx status code
func (o *TwoFactorDisablePostForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this two factor disable post forbidden response has a 5xx status code
func (o *TwoFactorDisablePostForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this two factor disable post forbidden response a status code equal to that given
func (o *TwoFactorDisablePostForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the two factor disable post forbidden response
func (o *TwoFactorDisablePostForbidden) Code() int {
	return 403
}

func (o *TwoFactorDisablePostForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostForbidden", 403)
}

func (o *TwoFactorDisablePostForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostForbidden", 403)
}

func (o *TwoFactorDisablePostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTwoFactorDisablePostNotAcceptable creates a TwoFactorDisablePostNotAcceptable with default headers values
func NewTwoFactorDisablePostNotAcceptable() *TwoFactorDisablePostNotAcceptable {
	return &TwoFactorDisablePostNotAcceptable{}
}

/*
TwoFactorDisablePostNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type TwoFactorDisablePostNotAcceptable struct {
}

// IsSuccess returns true when this two factor disable post not acceptable response has a 2xx status code
func (o *TwoFactorDisablePostNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this two factor disable post not acceptable response has a 3xx status code
func (o *TwoFactorDisablePostNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this two factor disable post not acceptable response has a 4xx status code
func (o *TwoFactorDisablePostNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this two factor disable post not acceptable response has a 5xx status code
func (o *TwoFactorDisablePostNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this two factor disable post not acceptable response a status code equal to that given
func (o *TwoFactorDisablePostNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the two factor disable post not acceptable response
func (o *TwoFactorDisablePostNotAcceptable) Code() int {
	return 406
}

func (o *TwoFactorDisablePostNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostNotAcceptable", 406)
}

func (o *TwoFactorDisablePostNotAcceptable) String() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostNotAcceptable", 406)
}

func (o *TwoFactorDisablePostNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTwoFactorDisablePostConflict creates a TwoFactorDisablePostConflict with default headers values
func NewTwoFactorDisablePostConflict() *TwoFactorDisablePostConflict {
	return &TwoFactorDisablePostConflict{}
}

/*
TwoFactorDisablePostConflict describes a response with status code 409, with default header values.

conflict
*/
type TwoFactorDisablePostConflict struct {
}

// IsSuccess returns true when this two factor disable post conflict response has a 2xx status code
func (o *TwoFactorDisablePostConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this two factor disable post conflict response has a 3xx status code
func (o *TwoFactorDisablePostConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this two factor disable post conflict response has a 4xx status code
func (o *TwoFactorDisablePostConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this two factor disable post conflict response has a 5xx status code
func (o *TwoFactorDisablePostConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this two factor disable post conflict response a status code equal to that given
func (o *TwoFactorDisablePostConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the two factor disable post conflict response
func (o *TwoFactorDisablePostConflict) Code() int {
	return 409
}

func (o *TwoFactorDisablePostConflict) Error() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostConflict", 409)
}

func (o *TwoFactorDisablePostConflict) String() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostConflict", 409)
}

func (o *TwoFactorDisablePostConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTwoFactorDisablePostUnprocessableEntity creates a TwoFactorDisablePostUnprocessableEntity with default headers values
func NewTwoFactorDisablePostUnprocessableEntity() *TwoFactorDisablePostUnprocessableEntity {
	return &TwoFactorDisablePostUnprocessableEntity{}
}

/*
TwoFactorDisablePostUnprocessableEntity describes a response with status code 422, with default header values.

unprocessable entity
*/
type TwoFactorDisablePostUnprocessableEntity struct {
}

// IsSuccess returns true when this two factor disable post unprocessable entity response has a 2xx status code
func (o *TwoFactorDisablePostUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this two factor disable post unprocessable entity response has a 3xx status code
func (o *TwoFactorDisablePostUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this two factor disable post unprocessable entity response has a 4xx status code
func (o *TwoFactorDisablePostUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this two factor disable post unprocessable entity response has a 5xx status code
func (o *TwoFactorDisablePostUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this two factor disable post unprocessable entity response a status code equal to that given
func (o *TwoFactorDisablePostUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the two factor disable post unprocessable entity response
func (o *TwoFactorDisablePostUnprocessableEntity) Code() int {
	return 422
}

func (o *TwoFactorDisablePostUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostUnprocessableEntity", 422)
}

func (o *TwoFactorDisablePostUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostUnprocessableEntity", 422)
}

func (o *TwoFactorDisablePostUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTwoFactorDisablePostInternalServerError creates a TwoFactorDisablePostInternalServerError with default headers values
func NewTwoFactorDisablePostInternalServerError() *TwoFactorDisablePostInternalServerError {
	return &TwoFactorDisablePostInternalServerError{}
}

/*
TwoFactorDisablePostInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type TwoFactorDisablePostInternalServerError struct {
}

// IsSuccess returns true when this two factor disable post internal server error response has a 2xx status code
func (o *TwoFactorDisablePostInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this two factor disable post internal server error response has a 3xx status code
func (o *TwoFactorDisablePostInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this two factor disable post internal server error response has a 4xx status code
func (o *TwoFactorDisablePostInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this two factor disable post internal server error response has a 5xx status code
func (o *TwoFactorDisablePostInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this two factor disable post internal server error response a status code equal to that given
func (o *TwoFactorDisablePostInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the two factor disable post internal server error response
func (o *TwoFactorDisablePostInternalServerError) Code() int {
	return 500
}

func (o *TwoFactorDisablePostInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostInternalServerError", 500)
}

func (o *TwoFactorDisablePostInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/user/2fa/disable][%d] twoFactorDisablePostInternalServerError", 500)
}

func (o *TwoFactorDisablePostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
