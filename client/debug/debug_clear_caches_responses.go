// Code generated by go-swagger; DO NOT EDIT.

package debug

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DebugClearCachesReader is a Reader for the DebugClearCaches structure.
type DebugClearCachesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DebugClearCachesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDebugClearCachesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDebugClearCachesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDebugClearCachesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDebugClearCachesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewDebugClearCachesNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDebugClearCachesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/admin/debug/caches/clear] debugClearCaches", response, response.Code())
	}
}

// NewDebugClearCachesOK creates a DebugClearCachesOK with default headers values
func NewDebugClearCachesOK() *DebugClearCachesOK {
	return &DebugClearCachesOK{}
}

/*
DebugClearCachesOK describes a response with status code 200, with default header values.

All good baby!
*/
type DebugClearCachesOK struct {
}

// IsSuccess returns true when this debug clear caches o k response has a 2xx status code
func (o *DebugClearCachesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this debug clear caches o k response has a 3xx status code
func (o *DebugClearCachesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this debug clear caches o k response has a 4xx status code
func (o *DebugClearCachesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this debug clear caches o k response has a 5xx status code
func (o *DebugClearCachesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this debug clear caches o k response a status code equal to that given
func (o *DebugClearCachesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the debug clear caches o k response
func (o *DebugClearCachesOK) Code() int {
	return 200
}

func (o *DebugClearCachesOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesOK", 200)
}

func (o *DebugClearCachesOK) String() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesOK", 200)
}

func (o *DebugClearCachesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDebugClearCachesBadRequest creates a DebugClearCachesBadRequest with default headers values
func NewDebugClearCachesBadRequest() *DebugClearCachesBadRequest {
	return &DebugClearCachesBadRequest{}
}

/*
DebugClearCachesBadRequest describes a response with status code 400, with default header values.

bad request
*/
type DebugClearCachesBadRequest struct {
}

// IsSuccess returns true when this debug clear caches bad request response has a 2xx status code
func (o *DebugClearCachesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this debug clear caches bad request response has a 3xx status code
func (o *DebugClearCachesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this debug clear caches bad request response has a 4xx status code
func (o *DebugClearCachesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this debug clear caches bad request response has a 5xx status code
func (o *DebugClearCachesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this debug clear caches bad request response a status code equal to that given
func (o *DebugClearCachesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the debug clear caches bad request response
func (o *DebugClearCachesBadRequest) Code() int {
	return 400
}

func (o *DebugClearCachesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesBadRequest", 400)
}

func (o *DebugClearCachesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesBadRequest", 400)
}

func (o *DebugClearCachesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDebugClearCachesUnauthorized creates a DebugClearCachesUnauthorized with default headers values
func NewDebugClearCachesUnauthorized() *DebugClearCachesUnauthorized {
	return &DebugClearCachesUnauthorized{}
}

/*
DebugClearCachesUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type DebugClearCachesUnauthorized struct {
}

// IsSuccess returns true when this debug clear caches unauthorized response has a 2xx status code
func (o *DebugClearCachesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this debug clear caches unauthorized response has a 3xx status code
func (o *DebugClearCachesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this debug clear caches unauthorized response has a 4xx status code
func (o *DebugClearCachesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this debug clear caches unauthorized response has a 5xx status code
func (o *DebugClearCachesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this debug clear caches unauthorized response a status code equal to that given
func (o *DebugClearCachesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the debug clear caches unauthorized response
func (o *DebugClearCachesUnauthorized) Code() int {
	return 401
}

func (o *DebugClearCachesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesUnauthorized", 401)
}

func (o *DebugClearCachesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesUnauthorized", 401)
}

func (o *DebugClearCachesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDebugClearCachesNotFound creates a DebugClearCachesNotFound with default headers values
func NewDebugClearCachesNotFound() *DebugClearCachesNotFound {
	return &DebugClearCachesNotFound{}
}

/*
DebugClearCachesNotFound describes a response with status code 404, with default header values.

not found
*/
type DebugClearCachesNotFound struct {
}

// IsSuccess returns true when this debug clear caches not found response has a 2xx status code
func (o *DebugClearCachesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this debug clear caches not found response has a 3xx status code
func (o *DebugClearCachesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this debug clear caches not found response has a 4xx status code
func (o *DebugClearCachesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this debug clear caches not found response has a 5xx status code
func (o *DebugClearCachesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this debug clear caches not found response a status code equal to that given
func (o *DebugClearCachesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the debug clear caches not found response
func (o *DebugClearCachesNotFound) Code() int {
	return 404
}

func (o *DebugClearCachesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesNotFound", 404)
}

func (o *DebugClearCachesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesNotFound", 404)
}

func (o *DebugClearCachesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDebugClearCachesNotAcceptable creates a DebugClearCachesNotAcceptable with default headers values
func NewDebugClearCachesNotAcceptable() *DebugClearCachesNotAcceptable {
	return &DebugClearCachesNotAcceptable{}
}

/*
DebugClearCachesNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type DebugClearCachesNotAcceptable struct {
}

// IsSuccess returns true when this debug clear caches not acceptable response has a 2xx status code
func (o *DebugClearCachesNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this debug clear caches not acceptable response has a 3xx status code
func (o *DebugClearCachesNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this debug clear caches not acceptable response has a 4xx status code
func (o *DebugClearCachesNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this debug clear caches not acceptable response has a 5xx status code
func (o *DebugClearCachesNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this debug clear caches not acceptable response a status code equal to that given
func (o *DebugClearCachesNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the debug clear caches not acceptable response
func (o *DebugClearCachesNotAcceptable) Code() int {
	return 406
}

func (o *DebugClearCachesNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesNotAcceptable", 406)
}

func (o *DebugClearCachesNotAcceptable) String() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesNotAcceptable", 406)
}

func (o *DebugClearCachesNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDebugClearCachesInternalServerError creates a DebugClearCachesInternalServerError with default headers values
func NewDebugClearCachesInternalServerError() *DebugClearCachesInternalServerError {
	return &DebugClearCachesInternalServerError{}
}

/*
DebugClearCachesInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type DebugClearCachesInternalServerError struct {
}

// IsSuccess returns true when this debug clear caches internal server error response has a 2xx status code
func (o *DebugClearCachesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this debug clear caches internal server error response has a 3xx status code
func (o *DebugClearCachesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this debug clear caches internal server error response has a 4xx status code
func (o *DebugClearCachesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this debug clear caches internal server error response has a 5xx status code
func (o *DebugClearCachesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this debug clear caches internal server error response a status code equal to that given
func (o *DebugClearCachesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the debug clear caches internal server error response
func (o *DebugClearCachesInternalServerError) Code() int {
	return 500
}

func (o *DebugClearCachesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesInternalServerError", 500)
}

func (o *DebugClearCachesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/admin/debug/caches/clear][%d] debugClearCachesInternalServerError", 500)
}

func (o *DebugClearCachesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
