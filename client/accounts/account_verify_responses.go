// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owu-one/gotosocial-sdk/models"
)

// AccountVerifyReader is a Reader for the AccountVerify structure.
type AccountVerifyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountVerifyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccountVerifyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountVerifyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccountVerifyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccountVerifyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewAccountVerifyNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccountVerifyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/accounts/verify_credentials] accountVerify", response, response.Code())
	}
}

// NewAccountVerifyOK creates a AccountVerifyOK with default headers values
func NewAccountVerifyOK() *AccountVerifyOK {
	return &AccountVerifyOK{}
}

/*
AccountVerifyOK describes a response with status code 200, with default header values.

AccountVerifyOK account verify o k
*/
type AccountVerifyOK struct {
	Payload *models.Account
}

// IsSuccess returns true when this account verify o k response has a 2xx status code
func (o *AccountVerifyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this account verify o k response has a 3xx status code
func (o *AccountVerifyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account verify o k response has a 4xx status code
func (o *AccountVerifyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this account verify o k response has a 5xx status code
func (o *AccountVerifyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this account verify o k response a status code equal to that given
func (o *AccountVerifyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the account verify o k response
func (o *AccountVerifyOK) Code() int {
	return 200
}

func (o *AccountVerifyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyOK %s", 200, payload)
}

func (o *AccountVerifyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyOK %s", 200, payload)
}

func (o *AccountVerifyOK) GetPayload() *models.Account {
	return o.Payload
}

func (o *AccountVerifyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Account)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountVerifyBadRequest creates a AccountVerifyBadRequest with default headers values
func NewAccountVerifyBadRequest() *AccountVerifyBadRequest {
	return &AccountVerifyBadRequest{}
}

/*
AccountVerifyBadRequest describes a response with status code 400, with default header values.

bad request
*/
type AccountVerifyBadRequest struct {
}

// IsSuccess returns true when this account verify bad request response has a 2xx status code
func (o *AccountVerifyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account verify bad request response has a 3xx status code
func (o *AccountVerifyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account verify bad request response has a 4xx status code
func (o *AccountVerifyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this account verify bad request response has a 5xx status code
func (o *AccountVerifyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this account verify bad request response a status code equal to that given
func (o *AccountVerifyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the account verify bad request response
func (o *AccountVerifyBadRequest) Code() int {
	return 400
}

func (o *AccountVerifyBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyBadRequest", 400)
}

func (o *AccountVerifyBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyBadRequest", 400)
}

func (o *AccountVerifyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountVerifyUnauthorized creates a AccountVerifyUnauthorized with default headers values
func NewAccountVerifyUnauthorized() *AccountVerifyUnauthorized {
	return &AccountVerifyUnauthorized{}
}

/*
AccountVerifyUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type AccountVerifyUnauthorized struct {
}

// IsSuccess returns true when this account verify unauthorized response has a 2xx status code
func (o *AccountVerifyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account verify unauthorized response has a 3xx status code
func (o *AccountVerifyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account verify unauthorized response has a 4xx status code
func (o *AccountVerifyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this account verify unauthorized response has a 5xx status code
func (o *AccountVerifyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this account verify unauthorized response a status code equal to that given
func (o *AccountVerifyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the account verify unauthorized response
func (o *AccountVerifyUnauthorized) Code() int {
	return 401
}

func (o *AccountVerifyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyUnauthorized", 401)
}

func (o *AccountVerifyUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyUnauthorized", 401)
}

func (o *AccountVerifyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountVerifyNotFound creates a AccountVerifyNotFound with default headers values
func NewAccountVerifyNotFound() *AccountVerifyNotFound {
	return &AccountVerifyNotFound{}
}

/*
AccountVerifyNotFound describes a response with status code 404, with default header values.

not found
*/
type AccountVerifyNotFound struct {
}

// IsSuccess returns true when this account verify not found response has a 2xx status code
func (o *AccountVerifyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account verify not found response has a 3xx status code
func (o *AccountVerifyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account verify not found response has a 4xx status code
func (o *AccountVerifyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this account verify not found response has a 5xx status code
func (o *AccountVerifyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this account verify not found response a status code equal to that given
func (o *AccountVerifyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the account verify not found response
func (o *AccountVerifyNotFound) Code() int {
	return 404
}

func (o *AccountVerifyNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyNotFound", 404)
}

func (o *AccountVerifyNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyNotFound", 404)
}

func (o *AccountVerifyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountVerifyNotAcceptable creates a AccountVerifyNotAcceptable with default headers values
func NewAccountVerifyNotAcceptable() *AccountVerifyNotAcceptable {
	return &AccountVerifyNotAcceptable{}
}

/*
AccountVerifyNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type AccountVerifyNotAcceptable struct {
}

// IsSuccess returns true when this account verify not acceptable response has a 2xx status code
func (o *AccountVerifyNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account verify not acceptable response has a 3xx status code
func (o *AccountVerifyNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account verify not acceptable response has a 4xx status code
func (o *AccountVerifyNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this account verify not acceptable response has a 5xx status code
func (o *AccountVerifyNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this account verify not acceptable response a status code equal to that given
func (o *AccountVerifyNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the account verify not acceptable response
func (o *AccountVerifyNotAcceptable) Code() int {
	return 406
}

func (o *AccountVerifyNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyNotAcceptable", 406)
}

func (o *AccountVerifyNotAcceptable) String() string {
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyNotAcceptable", 406)
}

func (o *AccountVerifyNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountVerifyInternalServerError creates a AccountVerifyInternalServerError with default headers values
func NewAccountVerifyInternalServerError() *AccountVerifyInternalServerError {
	return &AccountVerifyInternalServerError{}
}

/*
AccountVerifyInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type AccountVerifyInternalServerError struct {
}

// IsSuccess returns true when this account verify internal server error response has a 2xx status code
func (o *AccountVerifyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account verify internal server error response has a 3xx status code
func (o *AccountVerifyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account verify internal server error response has a 4xx status code
func (o *AccountVerifyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this account verify internal server error response has a 5xx status code
func (o *AccountVerifyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this account verify internal server error response a status code equal to that given
func (o *AccountVerifyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the account verify internal server error response
func (o *AccountVerifyInternalServerError) Code() int {
	return 500
}

func (o *AccountVerifyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyInternalServerError", 500)
}

func (o *AccountVerifyInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/accounts/verify_credentials][%d] accountVerifyInternalServerError", 500)
}

func (o *AccountVerifyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
