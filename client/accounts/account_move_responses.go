// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AccountMoveReader is a Reader for the AccountMove structure.
type AccountMoveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountMoveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewAccountMoveAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountMoveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccountMoveUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccountMoveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewAccountMoveNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewAccountMoveUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccountMoveInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/accounts/move] accountMove", response, response.Code())
	}
}

// NewAccountMoveAccepted creates a AccountMoveAccepted with default headers values
func NewAccountMoveAccepted() *AccountMoveAccepted {
	return &AccountMoveAccepted{}
}

/*
AccountMoveAccepted describes a response with status code 202, with default header values.

The account move has been accepted and the account will be moved.
*/
type AccountMoveAccepted struct {
}

// IsSuccess returns true when this account move accepted response has a 2xx status code
func (o *AccountMoveAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this account move accepted response has a 3xx status code
func (o *AccountMoveAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account move accepted response has a 4xx status code
func (o *AccountMoveAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this account move accepted response has a 5xx status code
func (o *AccountMoveAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this account move accepted response a status code equal to that given
func (o *AccountMoveAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the account move accepted response
func (o *AccountMoveAccepted) Code() int {
	return 202
}

func (o *AccountMoveAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveAccepted", 202)
}

func (o *AccountMoveAccepted) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveAccepted", 202)
}

func (o *AccountMoveAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountMoveBadRequest creates a AccountMoveBadRequest with default headers values
func NewAccountMoveBadRequest() *AccountMoveBadRequest {
	return &AccountMoveBadRequest{}
}

/*
AccountMoveBadRequest describes a response with status code 400, with default header values.

bad request
*/
type AccountMoveBadRequest struct {
}

// IsSuccess returns true when this account move bad request response has a 2xx status code
func (o *AccountMoveBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account move bad request response has a 3xx status code
func (o *AccountMoveBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account move bad request response has a 4xx status code
func (o *AccountMoveBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this account move bad request response has a 5xx status code
func (o *AccountMoveBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this account move bad request response a status code equal to that given
func (o *AccountMoveBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the account move bad request response
func (o *AccountMoveBadRequest) Code() int {
	return 400
}

func (o *AccountMoveBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveBadRequest", 400)
}

func (o *AccountMoveBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveBadRequest", 400)
}

func (o *AccountMoveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountMoveUnauthorized creates a AccountMoveUnauthorized with default headers values
func NewAccountMoveUnauthorized() *AccountMoveUnauthorized {
	return &AccountMoveUnauthorized{}
}

/*
AccountMoveUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type AccountMoveUnauthorized struct {
}

// IsSuccess returns true when this account move unauthorized response has a 2xx status code
func (o *AccountMoveUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account move unauthorized response has a 3xx status code
func (o *AccountMoveUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account move unauthorized response has a 4xx status code
func (o *AccountMoveUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this account move unauthorized response has a 5xx status code
func (o *AccountMoveUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this account move unauthorized response a status code equal to that given
func (o *AccountMoveUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the account move unauthorized response
func (o *AccountMoveUnauthorized) Code() int {
	return 401
}

func (o *AccountMoveUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveUnauthorized", 401)
}

func (o *AccountMoveUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveUnauthorized", 401)
}

func (o *AccountMoveUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountMoveNotFound creates a AccountMoveNotFound with default headers values
func NewAccountMoveNotFound() *AccountMoveNotFound {
	return &AccountMoveNotFound{}
}

/*
AccountMoveNotFound describes a response with status code 404, with default header values.

not found
*/
type AccountMoveNotFound struct {
}

// IsSuccess returns true when this account move not found response has a 2xx status code
func (o *AccountMoveNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account move not found response has a 3xx status code
func (o *AccountMoveNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account move not found response has a 4xx status code
func (o *AccountMoveNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this account move not found response has a 5xx status code
func (o *AccountMoveNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this account move not found response a status code equal to that given
func (o *AccountMoveNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the account move not found response
func (o *AccountMoveNotFound) Code() int {
	return 404
}

func (o *AccountMoveNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveNotFound", 404)
}

func (o *AccountMoveNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveNotFound", 404)
}

func (o *AccountMoveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountMoveNotAcceptable creates a AccountMoveNotAcceptable with default headers values
func NewAccountMoveNotAcceptable() *AccountMoveNotAcceptable {
	return &AccountMoveNotAcceptable{}
}

/*
AccountMoveNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type AccountMoveNotAcceptable struct {
}

// IsSuccess returns true when this account move not acceptable response has a 2xx status code
func (o *AccountMoveNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account move not acceptable response has a 3xx status code
func (o *AccountMoveNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account move not acceptable response has a 4xx status code
func (o *AccountMoveNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this account move not acceptable response has a 5xx status code
func (o *AccountMoveNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this account move not acceptable response a status code equal to that given
func (o *AccountMoveNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the account move not acceptable response
func (o *AccountMoveNotAcceptable) Code() int {
	return 406
}

func (o *AccountMoveNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveNotAcceptable", 406)
}

func (o *AccountMoveNotAcceptable) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveNotAcceptable", 406)
}

func (o *AccountMoveNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountMoveUnprocessableEntity creates a AccountMoveUnprocessableEntity with default headers values
func NewAccountMoveUnprocessableEntity() *AccountMoveUnprocessableEntity {
	return &AccountMoveUnprocessableEntity{}
}

/*
AccountMoveUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable. Check the response body for more details.
*/
type AccountMoveUnprocessableEntity struct {
}

// IsSuccess returns true when this account move unprocessable entity response has a 2xx status code
func (o *AccountMoveUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account move unprocessable entity response has a 3xx status code
func (o *AccountMoveUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account move unprocessable entity response has a 4xx status code
func (o *AccountMoveUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this account move unprocessable entity response has a 5xx status code
func (o *AccountMoveUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this account move unprocessable entity response a status code equal to that given
func (o *AccountMoveUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the account move unprocessable entity response
func (o *AccountMoveUnprocessableEntity) Code() int {
	return 422
}

func (o *AccountMoveUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveUnprocessableEntity", 422)
}

func (o *AccountMoveUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveUnprocessableEntity", 422)
}

func (o *AccountMoveUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountMoveInternalServerError creates a AccountMoveInternalServerError with default headers values
func NewAccountMoveInternalServerError() *AccountMoveInternalServerError {
	return &AccountMoveInternalServerError{}
}

/*
AccountMoveInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type AccountMoveInternalServerError struct {
}

// IsSuccess returns true when this account move internal server error response has a 2xx status code
func (o *AccountMoveInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account move internal server error response has a 3xx status code
func (o *AccountMoveInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account move internal server error response has a 4xx status code
func (o *AccountMoveInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this account move internal server error response has a 5xx status code
func (o *AccountMoveInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this account move internal server error response a status code equal to that given
func (o *AccountMoveInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the account move internal server error response
func (o *AccountMoveInternalServerError) Code() int {
	return 500
}

func (o *AccountMoveInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveInternalServerError", 500)
}

func (o *AccountMoveInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/move][%d] accountMoveInternalServerError", 500)
}

func (o *AccountMoveInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
