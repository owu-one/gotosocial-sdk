// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AccountDeleteReader is a Reader for the AccountDelete structure.
type AccountDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewAccountDeleteAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccountDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccountDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewAccountDeleteNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccountDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/accounts/delete] accountDelete", response, response.Code())
	}
}

// NewAccountDeleteAccepted creates a AccountDeleteAccepted with default headers values
func NewAccountDeleteAccepted() *AccountDeleteAccepted {
	return &AccountDeleteAccepted{}
}

/*
AccountDeleteAccepted describes a response with status code 202, with default header values.

The account deletion has been accepted and the account will be deleted.
*/
type AccountDeleteAccepted struct {
}

// IsSuccess returns true when this account delete accepted response has a 2xx status code
func (o *AccountDeleteAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this account delete accepted response has a 3xx status code
func (o *AccountDeleteAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account delete accepted response has a 4xx status code
func (o *AccountDeleteAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this account delete accepted response has a 5xx status code
func (o *AccountDeleteAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this account delete accepted response a status code equal to that given
func (o *AccountDeleteAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the account delete accepted response
func (o *AccountDeleteAccepted) Code() int {
	return 202
}

func (o *AccountDeleteAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteAccepted", 202)
}

func (o *AccountDeleteAccepted) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteAccepted", 202)
}

func (o *AccountDeleteAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountDeleteBadRequest creates a AccountDeleteBadRequest with default headers values
func NewAccountDeleteBadRequest() *AccountDeleteBadRequest {
	return &AccountDeleteBadRequest{}
}

/*
AccountDeleteBadRequest describes a response with status code 400, with default header values.

bad request
*/
type AccountDeleteBadRequest struct {
}

// IsSuccess returns true when this account delete bad request response has a 2xx status code
func (o *AccountDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account delete bad request response has a 3xx status code
func (o *AccountDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account delete bad request response has a 4xx status code
func (o *AccountDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this account delete bad request response has a 5xx status code
func (o *AccountDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this account delete bad request response a status code equal to that given
func (o *AccountDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the account delete bad request response
func (o *AccountDeleteBadRequest) Code() int {
	return 400
}

func (o *AccountDeleteBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteBadRequest", 400)
}

func (o *AccountDeleteBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteBadRequest", 400)
}

func (o *AccountDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountDeleteUnauthorized creates a AccountDeleteUnauthorized with default headers values
func NewAccountDeleteUnauthorized() *AccountDeleteUnauthorized {
	return &AccountDeleteUnauthorized{}
}

/*
AccountDeleteUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type AccountDeleteUnauthorized struct {
}

// IsSuccess returns true when this account delete unauthorized response has a 2xx status code
func (o *AccountDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account delete unauthorized response has a 3xx status code
func (o *AccountDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account delete unauthorized response has a 4xx status code
func (o *AccountDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this account delete unauthorized response has a 5xx status code
func (o *AccountDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this account delete unauthorized response a status code equal to that given
func (o *AccountDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the account delete unauthorized response
func (o *AccountDeleteUnauthorized) Code() int {
	return 401
}

func (o *AccountDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteUnauthorized", 401)
}

func (o *AccountDeleteUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteUnauthorized", 401)
}

func (o *AccountDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountDeleteNotFound creates a AccountDeleteNotFound with default headers values
func NewAccountDeleteNotFound() *AccountDeleteNotFound {
	return &AccountDeleteNotFound{}
}

/*
AccountDeleteNotFound describes a response with status code 404, with default header values.

not found
*/
type AccountDeleteNotFound struct {
}

// IsSuccess returns true when this account delete not found response has a 2xx status code
func (o *AccountDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account delete not found response has a 3xx status code
func (o *AccountDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account delete not found response has a 4xx status code
func (o *AccountDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this account delete not found response has a 5xx status code
func (o *AccountDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this account delete not found response a status code equal to that given
func (o *AccountDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the account delete not found response
func (o *AccountDeleteNotFound) Code() int {
	return 404
}

func (o *AccountDeleteNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteNotFound", 404)
}

func (o *AccountDeleteNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteNotFound", 404)
}

func (o *AccountDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountDeleteNotAcceptable creates a AccountDeleteNotAcceptable with default headers values
func NewAccountDeleteNotAcceptable() *AccountDeleteNotAcceptable {
	return &AccountDeleteNotAcceptable{}
}

/*
AccountDeleteNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type AccountDeleteNotAcceptable struct {
}

// IsSuccess returns true when this account delete not acceptable response has a 2xx status code
func (o *AccountDeleteNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account delete not acceptable response has a 3xx status code
func (o *AccountDeleteNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account delete not acceptable response has a 4xx status code
func (o *AccountDeleteNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this account delete not acceptable response has a 5xx status code
func (o *AccountDeleteNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this account delete not acceptable response a status code equal to that given
func (o *AccountDeleteNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the account delete not acceptable response
func (o *AccountDeleteNotAcceptable) Code() int {
	return 406
}

func (o *AccountDeleteNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteNotAcceptable", 406)
}

func (o *AccountDeleteNotAcceptable) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteNotAcceptable", 406)
}

func (o *AccountDeleteNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountDeleteInternalServerError creates a AccountDeleteInternalServerError with default headers values
func NewAccountDeleteInternalServerError() *AccountDeleteInternalServerError {
	return &AccountDeleteInternalServerError{}
}

/*
AccountDeleteInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type AccountDeleteInternalServerError struct {
}

// IsSuccess returns true when this account delete internal server error response has a 2xx status code
func (o *AccountDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this account delete internal server error response has a 3xx status code
func (o *AccountDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this account delete internal server error response has a 4xx status code
func (o *AccountDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this account delete internal server error response has a 5xx status code
func (o *AccountDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this account delete internal server error response a status code equal to that given
func (o *AccountDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the account delete internal server error response
func (o *AccountDeleteInternalServerError) Code() int {
	return 500
}

func (o *AccountDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteInternalServerError", 500)
}

func (o *AccountDeleteInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/accounts/delete][%d] accountDeleteInternalServerError", 500)
}

func (o *AccountDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
