// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owu-one/gotosocial-sdk/models"
)

// DomainPermissionExcludeDeleteReader is a Reader for the DomainPermissionExcludeDelete structure.
type DomainPermissionExcludeDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DomainPermissionExcludeDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDomainPermissionExcludeDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDomainPermissionExcludeDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDomainPermissionExcludeDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDomainPermissionExcludeDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewDomainPermissionExcludeDeleteNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDomainPermissionExcludeDeleteConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDomainPermissionExcludeDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/v1/admin/domain_permission_excludes/{id}] domainPermissionExcludeDelete", response, response.Code())
	}
}

// NewDomainPermissionExcludeDeleteOK creates a DomainPermissionExcludeDeleteOK with default headers values
func NewDomainPermissionExcludeDeleteOK() *DomainPermissionExcludeDeleteOK {
	return &DomainPermissionExcludeDeleteOK{}
}

/*
DomainPermissionExcludeDeleteOK describes a response with status code 200, with default header values.

The removed domain permission exclude.
*/
type DomainPermissionExcludeDeleteOK struct {
	Payload *models.DomainPermission
}

// IsSuccess returns true when this domain permission exclude delete o k response has a 2xx status code
func (o *DomainPermissionExcludeDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this domain permission exclude delete o k response has a 3xx status code
func (o *DomainPermissionExcludeDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude delete o k response has a 4xx status code
func (o *DomainPermissionExcludeDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this domain permission exclude delete o k response has a 5xx status code
func (o *DomainPermissionExcludeDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude delete o k response a status code equal to that given
func (o *DomainPermissionExcludeDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the domain permission exclude delete o k response
func (o *DomainPermissionExcludeDeleteOK) Code() int {
	return 200
}

func (o *DomainPermissionExcludeDeleteOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteOK %s", 200, payload)
}

func (o *DomainPermissionExcludeDeleteOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteOK %s", 200, payload)
}

func (o *DomainPermissionExcludeDeleteOK) GetPayload() *models.DomainPermission {
	return o.Payload
}

func (o *DomainPermissionExcludeDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomainPermission)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDomainPermissionExcludeDeleteBadRequest creates a DomainPermissionExcludeDeleteBadRequest with default headers values
func NewDomainPermissionExcludeDeleteBadRequest() *DomainPermissionExcludeDeleteBadRequest {
	return &DomainPermissionExcludeDeleteBadRequest{}
}

/*
DomainPermissionExcludeDeleteBadRequest describes a response with status code 400, with default header values.

bad request
*/
type DomainPermissionExcludeDeleteBadRequest struct {
}

// IsSuccess returns true when this domain permission exclude delete bad request response has a 2xx status code
func (o *DomainPermissionExcludeDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude delete bad request response has a 3xx status code
func (o *DomainPermissionExcludeDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude delete bad request response has a 4xx status code
func (o *DomainPermissionExcludeDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission exclude delete bad request response has a 5xx status code
func (o *DomainPermissionExcludeDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude delete bad request response a status code equal to that given
func (o *DomainPermissionExcludeDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the domain permission exclude delete bad request response
func (o *DomainPermissionExcludeDeleteBadRequest) Code() int {
	return 400
}

func (o *DomainPermissionExcludeDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteBadRequest", 400)
}

func (o *DomainPermissionExcludeDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteBadRequest", 400)
}

func (o *DomainPermissionExcludeDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludeDeleteUnauthorized creates a DomainPermissionExcludeDeleteUnauthorized with default headers values
func NewDomainPermissionExcludeDeleteUnauthorized() *DomainPermissionExcludeDeleteUnauthorized {
	return &DomainPermissionExcludeDeleteUnauthorized{}
}

/*
DomainPermissionExcludeDeleteUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type DomainPermissionExcludeDeleteUnauthorized struct {
}

// IsSuccess returns true when this domain permission exclude delete unauthorized response has a 2xx status code
func (o *DomainPermissionExcludeDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude delete unauthorized response has a 3xx status code
func (o *DomainPermissionExcludeDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude delete unauthorized response has a 4xx status code
func (o *DomainPermissionExcludeDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission exclude delete unauthorized response has a 5xx status code
func (o *DomainPermissionExcludeDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude delete unauthorized response a status code equal to that given
func (o *DomainPermissionExcludeDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the domain permission exclude delete unauthorized response
func (o *DomainPermissionExcludeDeleteUnauthorized) Code() int {
	return 401
}

func (o *DomainPermissionExcludeDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteUnauthorized", 401)
}

func (o *DomainPermissionExcludeDeleteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteUnauthorized", 401)
}

func (o *DomainPermissionExcludeDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludeDeleteForbidden creates a DomainPermissionExcludeDeleteForbidden with default headers values
func NewDomainPermissionExcludeDeleteForbidden() *DomainPermissionExcludeDeleteForbidden {
	return &DomainPermissionExcludeDeleteForbidden{}
}

/*
DomainPermissionExcludeDeleteForbidden describes a response with status code 403, with default header values.

forbidden
*/
type DomainPermissionExcludeDeleteForbidden struct {
}

// IsSuccess returns true when this domain permission exclude delete forbidden response has a 2xx status code
func (o *DomainPermissionExcludeDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude delete forbidden response has a 3xx status code
func (o *DomainPermissionExcludeDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude delete forbidden response has a 4xx status code
func (o *DomainPermissionExcludeDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission exclude delete forbidden response has a 5xx status code
func (o *DomainPermissionExcludeDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude delete forbidden response a status code equal to that given
func (o *DomainPermissionExcludeDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the domain permission exclude delete forbidden response
func (o *DomainPermissionExcludeDeleteForbidden) Code() int {
	return 403
}

func (o *DomainPermissionExcludeDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteForbidden", 403)
}

func (o *DomainPermissionExcludeDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteForbidden", 403)
}

func (o *DomainPermissionExcludeDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludeDeleteNotAcceptable creates a DomainPermissionExcludeDeleteNotAcceptable with default headers values
func NewDomainPermissionExcludeDeleteNotAcceptable() *DomainPermissionExcludeDeleteNotAcceptable {
	return &DomainPermissionExcludeDeleteNotAcceptable{}
}

/*
DomainPermissionExcludeDeleteNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type DomainPermissionExcludeDeleteNotAcceptable struct {
}

// IsSuccess returns true when this domain permission exclude delete not acceptable response has a 2xx status code
func (o *DomainPermissionExcludeDeleteNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude delete not acceptable response has a 3xx status code
func (o *DomainPermissionExcludeDeleteNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude delete not acceptable response has a 4xx status code
func (o *DomainPermissionExcludeDeleteNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission exclude delete not acceptable response has a 5xx status code
func (o *DomainPermissionExcludeDeleteNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude delete not acceptable response a status code equal to that given
func (o *DomainPermissionExcludeDeleteNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the domain permission exclude delete not acceptable response
func (o *DomainPermissionExcludeDeleteNotAcceptable) Code() int {
	return 406
}

func (o *DomainPermissionExcludeDeleteNotAcceptable) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteNotAcceptable", 406)
}

func (o *DomainPermissionExcludeDeleteNotAcceptable) String() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteNotAcceptable", 406)
}

func (o *DomainPermissionExcludeDeleteNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludeDeleteConflict creates a DomainPermissionExcludeDeleteConflict with default headers values
func NewDomainPermissionExcludeDeleteConflict() *DomainPermissionExcludeDeleteConflict {
	return &DomainPermissionExcludeDeleteConflict{}
}

/*
DomainPermissionExcludeDeleteConflict describes a response with status code 409, with default header values.

conflict
*/
type DomainPermissionExcludeDeleteConflict struct {
}

// IsSuccess returns true when this domain permission exclude delete conflict response has a 2xx status code
func (o *DomainPermissionExcludeDeleteConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude delete conflict response has a 3xx status code
func (o *DomainPermissionExcludeDeleteConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude delete conflict response has a 4xx status code
func (o *DomainPermissionExcludeDeleteConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission exclude delete conflict response has a 5xx status code
func (o *DomainPermissionExcludeDeleteConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude delete conflict response a status code equal to that given
func (o *DomainPermissionExcludeDeleteConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the domain permission exclude delete conflict response
func (o *DomainPermissionExcludeDeleteConflict) Code() int {
	return 409
}

func (o *DomainPermissionExcludeDeleteConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteConflict", 409)
}

func (o *DomainPermissionExcludeDeleteConflict) String() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteConflict", 409)
}

func (o *DomainPermissionExcludeDeleteConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludeDeleteInternalServerError creates a DomainPermissionExcludeDeleteInternalServerError with default headers values
func NewDomainPermissionExcludeDeleteInternalServerError() *DomainPermissionExcludeDeleteInternalServerError {
	return &DomainPermissionExcludeDeleteInternalServerError{}
}

/*
DomainPermissionExcludeDeleteInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type DomainPermissionExcludeDeleteInternalServerError struct {
}

// IsSuccess returns true when this domain permission exclude delete internal server error response has a 2xx status code
func (o *DomainPermissionExcludeDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude delete internal server error response has a 3xx status code
func (o *DomainPermissionExcludeDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude delete internal server error response has a 4xx status code
func (o *DomainPermissionExcludeDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this domain permission exclude delete internal server error response has a 5xx status code
func (o *DomainPermissionExcludeDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this domain permission exclude delete internal server error response a status code equal to that given
func (o *DomainPermissionExcludeDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the domain permission exclude delete internal server error response
func (o *DomainPermissionExcludeDeleteInternalServerError) Code() int {
	return 500
}

func (o *DomainPermissionExcludeDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteInternalServerError", 500)
}

func (o *DomainPermissionExcludeDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeDeleteInternalServerError", 500)
}

func (o *DomainPermissionExcludeDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
