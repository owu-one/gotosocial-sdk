// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owu-one/gotosocial-sdk/models"
)

// DomainPermissionSubscriptionGetReader is a Reader for the DomainPermissionSubscriptionGet structure.
type DomainPermissionSubscriptionGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DomainPermissionSubscriptionGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDomainPermissionSubscriptionGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDomainPermissionSubscriptionGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDomainPermissionSubscriptionGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDomainPermissionSubscriptionGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewDomainPermissionSubscriptionGetNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDomainPermissionSubscriptionGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/admin/domain_permission_subscriptions/{id}] domainPermissionSubscriptionGet", response, response.Code())
	}
}

// NewDomainPermissionSubscriptionGetOK creates a DomainPermissionSubscriptionGetOK with default headers values
func NewDomainPermissionSubscriptionGetOK() *DomainPermissionSubscriptionGetOK {
	return &DomainPermissionSubscriptionGetOK{}
}

/*
DomainPermissionSubscriptionGetOK describes a response with status code 200, with default header values.

Domain permission subscription.
*/
type DomainPermissionSubscriptionGetOK struct {
	Payload *models.DomainPermissionSubscription
}

// IsSuccess returns true when this domain permission subscription get o k response has a 2xx status code
func (o *DomainPermissionSubscriptionGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this domain permission subscription get o k response has a 3xx status code
func (o *DomainPermissionSubscriptionGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission subscription get o k response has a 4xx status code
func (o *DomainPermissionSubscriptionGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this domain permission subscription get o k response has a 5xx status code
func (o *DomainPermissionSubscriptionGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission subscription get o k response a status code equal to that given
func (o *DomainPermissionSubscriptionGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the domain permission subscription get o k response
func (o *DomainPermissionSubscriptionGetOK) Code() int {
	return 200
}

func (o *DomainPermissionSubscriptionGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetOK %s", 200, payload)
}

func (o *DomainPermissionSubscriptionGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetOK %s", 200, payload)
}

func (o *DomainPermissionSubscriptionGetOK) GetPayload() *models.DomainPermissionSubscription {
	return o.Payload
}

func (o *DomainPermissionSubscriptionGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomainPermissionSubscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDomainPermissionSubscriptionGetUnauthorized creates a DomainPermissionSubscriptionGetUnauthorized with default headers values
func NewDomainPermissionSubscriptionGetUnauthorized() *DomainPermissionSubscriptionGetUnauthorized {
	return &DomainPermissionSubscriptionGetUnauthorized{}
}

/*
DomainPermissionSubscriptionGetUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type DomainPermissionSubscriptionGetUnauthorized struct {
}

// IsSuccess returns true when this domain permission subscription get unauthorized response has a 2xx status code
func (o *DomainPermissionSubscriptionGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission subscription get unauthorized response has a 3xx status code
func (o *DomainPermissionSubscriptionGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission subscription get unauthorized response has a 4xx status code
func (o *DomainPermissionSubscriptionGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission subscription get unauthorized response has a 5xx status code
func (o *DomainPermissionSubscriptionGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission subscription get unauthorized response a status code equal to that given
func (o *DomainPermissionSubscriptionGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the domain permission subscription get unauthorized response
func (o *DomainPermissionSubscriptionGetUnauthorized) Code() int {
	return 401
}

func (o *DomainPermissionSubscriptionGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetUnauthorized", 401)
}

func (o *DomainPermissionSubscriptionGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetUnauthorized", 401)
}

func (o *DomainPermissionSubscriptionGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionSubscriptionGetForbidden creates a DomainPermissionSubscriptionGetForbidden with default headers values
func NewDomainPermissionSubscriptionGetForbidden() *DomainPermissionSubscriptionGetForbidden {
	return &DomainPermissionSubscriptionGetForbidden{}
}

/*
DomainPermissionSubscriptionGetForbidden describes a response with status code 403, with default header values.

forbidden
*/
type DomainPermissionSubscriptionGetForbidden struct {
}

// IsSuccess returns true when this domain permission subscription get forbidden response has a 2xx status code
func (o *DomainPermissionSubscriptionGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission subscription get forbidden response has a 3xx status code
func (o *DomainPermissionSubscriptionGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission subscription get forbidden response has a 4xx status code
func (o *DomainPermissionSubscriptionGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission subscription get forbidden response has a 5xx status code
func (o *DomainPermissionSubscriptionGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission subscription get forbidden response a status code equal to that given
func (o *DomainPermissionSubscriptionGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the domain permission subscription get forbidden response
func (o *DomainPermissionSubscriptionGetForbidden) Code() int {
	return 403
}

func (o *DomainPermissionSubscriptionGetForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetForbidden", 403)
}

func (o *DomainPermissionSubscriptionGetForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetForbidden", 403)
}

func (o *DomainPermissionSubscriptionGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionSubscriptionGetNotFound creates a DomainPermissionSubscriptionGetNotFound with default headers values
func NewDomainPermissionSubscriptionGetNotFound() *DomainPermissionSubscriptionGetNotFound {
	return &DomainPermissionSubscriptionGetNotFound{}
}

/*
DomainPermissionSubscriptionGetNotFound describes a response with status code 404, with default header values.

not found
*/
type DomainPermissionSubscriptionGetNotFound struct {
}

// IsSuccess returns true when this domain permission subscription get not found response has a 2xx status code
func (o *DomainPermissionSubscriptionGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission subscription get not found response has a 3xx status code
func (o *DomainPermissionSubscriptionGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission subscription get not found response has a 4xx status code
func (o *DomainPermissionSubscriptionGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission subscription get not found response has a 5xx status code
func (o *DomainPermissionSubscriptionGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission subscription get not found response a status code equal to that given
func (o *DomainPermissionSubscriptionGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the domain permission subscription get not found response
func (o *DomainPermissionSubscriptionGetNotFound) Code() int {
	return 404
}

func (o *DomainPermissionSubscriptionGetNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetNotFound", 404)
}

func (o *DomainPermissionSubscriptionGetNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetNotFound", 404)
}

func (o *DomainPermissionSubscriptionGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionSubscriptionGetNotAcceptable creates a DomainPermissionSubscriptionGetNotAcceptable with default headers values
func NewDomainPermissionSubscriptionGetNotAcceptable() *DomainPermissionSubscriptionGetNotAcceptable {
	return &DomainPermissionSubscriptionGetNotAcceptable{}
}

/*
DomainPermissionSubscriptionGetNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type DomainPermissionSubscriptionGetNotAcceptable struct {
}

// IsSuccess returns true when this domain permission subscription get not acceptable response has a 2xx status code
func (o *DomainPermissionSubscriptionGetNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission subscription get not acceptable response has a 3xx status code
func (o *DomainPermissionSubscriptionGetNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission subscription get not acceptable response has a 4xx status code
func (o *DomainPermissionSubscriptionGetNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission subscription get not acceptable response has a 5xx status code
func (o *DomainPermissionSubscriptionGetNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission subscription get not acceptable response a status code equal to that given
func (o *DomainPermissionSubscriptionGetNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the domain permission subscription get not acceptable response
func (o *DomainPermissionSubscriptionGetNotAcceptable) Code() int {
	return 406
}

func (o *DomainPermissionSubscriptionGetNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetNotAcceptable", 406)
}

func (o *DomainPermissionSubscriptionGetNotAcceptable) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetNotAcceptable", 406)
}

func (o *DomainPermissionSubscriptionGetNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionSubscriptionGetInternalServerError creates a DomainPermissionSubscriptionGetInternalServerError with default headers values
func NewDomainPermissionSubscriptionGetInternalServerError() *DomainPermissionSubscriptionGetInternalServerError {
	return &DomainPermissionSubscriptionGetInternalServerError{}
}

/*
DomainPermissionSubscriptionGetInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type DomainPermissionSubscriptionGetInternalServerError struct {
}

// IsSuccess returns true when this domain permission subscription get internal server error response has a 2xx status code
func (o *DomainPermissionSubscriptionGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission subscription get internal server error response has a 3xx status code
func (o *DomainPermissionSubscriptionGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission subscription get internal server error response has a 4xx status code
func (o *DomainPermissionSubscriptionGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this domain permission subscription get internal server error response has a 5xx status code
func (o *DomainPermissionSubscriptionGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this domain permission subscription get internal server error response a status code equal to that given
func (o *DomainPermissionSubscriptionGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the domain permission subscription get internal server error response
func (o *DomainPermissionSubscriptionGetInternalServerError) Code() int {
	return 500
}

func (o *DomainPermissionSubscriptionGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetInternalServerError", 500)
}

func (o *DomainPermissionSubscriptionGetInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_subscriptions/{id}][%d] domainPermissionSubscriptionGetInternalServerError", 500)
}

func (o *DomainPermissionSubscriptionGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
