// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owu-one/gotosocial-sdk/models"
)

// DomainPermissionExcludeGetReader is a Reader for the DomainPermissionExcludeGet structure.
type DomainPermissionExcludeGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DomainPermissionExcludeGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDomainPermissionExcludeGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDomainPermissionExcludeGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDomainPermissionExcludeGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDomainPermissionExcludeGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewDomainPermissionExcludeGetNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDomainPermissionExcludeGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/admin/domain_permission_excludes/{id}] domainPermissionExcludeGet", response, response.Code())
	}
}

// NewDomainPermissionExcludeGetOK creates a DomainPermissionExcludeGetOK with default headers values
func NewDomainPermissionExcludeGetOK() *DomainPermissionExcludeGetOK {
	return &DomainPermissionExcludeGetOK{}
}

/*
DomainPermissionExcludeGetOK describes a response with status code 200, with default header values.

Domain permission exclude.
*/
type DomainPermissionExcludeGetOK struct {
	Payload *models.DomainPermission
}

// IsSuccess returns true when this domain permission exclude get o k response has a 2xx status code
func (o *DomainPermissionExcludeGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this domain permission exclude get o k response has a 3xx status code
func (o *DomainPermissionExcludeGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude get o k response has a 4xx status code
func (o *DomainPermissionExcludeGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this domain permission exclude get o k response has a 5xx status code
func (o *DomainPermissionExcludeGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude get o k response a status code equal to that given
func (o *DomainPermissionExcludeGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the domain permission exclude get o k response
func (o *DomainPermissionExcludeGetOK) Code() int {
	return 200
}

func (o *DomainPermissionExcludeGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetOK %s", 200, payload)
}

func (o *DomainPermissionExcludeGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetOK %s", 200, payload)
}

func (o *DomainPermissionExcludeGetOK) GetPayload() *models.DomainPermission {
	return o.Payload
}

func (o *DomainPermissionExcludeGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomainPermission)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDomainPermissionExcludeGetUnauthorized creates a DomainPermissionExcludeGetUnauthorized with default headers values
func NewDomainPermissionExcludeGetUnauthorized() *DomainPermissionExcludeGetUnauthorized {
	return &DomainPermissionExcludeGetUnauthorized{}
}

/*
DomainPermissionExcludeGetUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type DomainPermissionExcludeGetUnauthorized struct {
}

// IsSuccess returns true when this domain permission exclude get unauthorized response has a 2xx status code
func (o *DomainPermissionExcludeGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude get unauthorized response has a 3xx status code
func (o *DomainPermissionExcludeGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude get unauthorized response has a 4xx status code
func (o *DomainPermissionExcludeGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission exclude get unauthorized response has a 5xx status code
func (o *DomainPermissionExcludeGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude get unauthorized response a status code equal to that given
func (o *DomainPermissionExcludeGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the domain permission exclude get unauthorized response
func (o *DomainPermissionExcludeGetUnauthorized) Code() int {
	return 401
}

func (o *DomainPermissionExcludeGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetUnauthorized", 401)
}

func (o *DomainPermissionExcludeGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetUnauthorized", 401)
}

func (o *DomainPermissionExcludeGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludeGetForbidden creates a DomainPermissionExcludeGetForbidden with default headers values
func NewDomainPermissionExcludeGetForbidden() *DomainPermissionExcludeGetForbidden {
	return &DomainPermissionExcludeGetForbidden{}
}

/*
DomainPermissionExcludeGetForbidden describes a response with status code 403, with default header values.

forbidden
*/
type DomainPermissionExcludeGetForbidden struct {
}

// IsSuccess returns true when this domain permission exclude get forbidden response has a 2xx status code
func (o *DomainPermissionExcludeGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude get forbidden response has a 3xx status code
func (o *DomainPermissionExcludeGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude get forbidden response has a 4xx status code
func (o *DomainPermissionExcludeGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission exclude get forbidden response has a 5xx status code
func (o *DomainPermissionExcludeGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude get forbidden response a status code equal to that given
func (o *DomainPermissionExcludeGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the domain permission exclude get forbidden response
func (o *DomainPermissionExcludeGetForbidden) Code() int {
	return 403
}

func (o *DomainPermissionExcludeGetForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetForbidden", 403)
}

func (o *DomainPermissionExcludeGetForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetForbidden", 403)
}

func (o *DomainPermissionExcludeGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludeGetNotFound creates a DomainPermissionExcludeGetNotFound with default headers values
func NewDomainPermissionExcludeGetNotFound() *DomainPermissionExcludeGetNotFound {
	return &DomainPermissionExcludeGetNotFound{}
}

/*
DomainPermissionExcludeGetNotFound describes a response with status code 404, with default header values.

not found
*/
type DomainPermissionExcludeGetNotFound struct {
}

// IsSuccess returns true when this domain permission exclude get not found response has a 2xx status code
func (o *DomainPermissionExcludeGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude get not found response has a 3xx status code
func (o *DomainPermissionExcludeGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude get not found response has a 4xx status code
func (o *DomainPermissionExcludeGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission exclude get not found response has a 5xx status code
func (o *DomainPermissionExcludeGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude get not found response a status code equal to that given
func (o *DomainPermissionExcludeGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the domain permission exclude get not found response
func (o *DomainPermissionExcludeGetNotFound) Code() int {
	return 404
}

func (o *DomainPermissionExcludeGetNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetNotFound", 404)
}

func (o *DomainPermissionExcludeGetNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetNotFound", 404)
}

func (o *DomainPermissionExcludeGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludeGetNotAcceptable creates a DomainPermissionExcludeGetNotAcceptable with default headers values
func NewDomainPermissionExcludeGetNotAcceptable() *DomainPermissionExcludeGetNotAcceptable {
	return &DomainPermissionExcludeGetNotAcceptable{}
}

/*
DomainPermissionExcludeGetNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type DomainPermissionExcludeGetNotAcceptable struct {
}

// IsSuccess returns true when this domain permission exclude get not acceptable response has a 2xx status code
func (o *DomainPermissionExcludeGetNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude get not acceptable response has a 3xx status code
func (o *DomainPermissionExcludeGetNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude get not acceptable response has a 4xx status code
func (o *DomainPermissionExcludeGetNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission exclude get not acceptable response has a 5xx status code
func (o *DomainPermissionExcludeGetNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission exclude get not acceptable response a status code equal to that given
func (o *DomainPermissionExcludeGetNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the domain permission exclude get not acceptable response
func (o *DomainPermissionExcludeGetNotAcceptable) Code() int {
	return 406
}

func (o *DomainPermissionExcludeGetNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetNotAcceptable", 406)
}

func (o *DomainPermissionExcludeGetNotAcceptable) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetNotAcceptable", 406)
}

func (o *DomainPermissionExcludeGetNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludeGetInternalServerError creates a DomainPermissionExcludeGetInternalServerError with default headers values
func NewDomainPermissionExcludeGetInternalServerError() *DomainPermissionExcludeGetInternalServerError {
	return &DomainPermissionExcludeGetInternalServerError{}
}

/*
DomainPermissionExcludeGetInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type DomainPermissionExcludeGetInternalServerError struct {
}

// IsSuccess returns true when this domain permission exclude get internal server error response has a 2xx status code
func (o *DomainPermissionExcludeGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission exclude get internal server error response has a 3xx status code
func (o *DomainPermissionExcludeGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission exclude get internal server error response has a 4xx status code
func (o *DomainPermissionExcludeGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this domain permission exclude get internal server error response has a 5xx status code
func (o *DomainPermissionExcludeGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this domain permission exclude get internal server error response a status code equal to that given
func (o *DomainPermissionExcludeGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the domain permission exclude get internal server error response
func (o *DomainPermissionExcludeGetInternalServerError) Code() int {
	return 500
}

func (o *DomainPermissionExcludeGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetInternalServerError", 500)
}

func (o *DomainPermissionExcludeGetInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes/{id}][%d] domainPermissionExcludeGetInternalServerError", 500)
}

func (o *DomainPermissionExcludeGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
