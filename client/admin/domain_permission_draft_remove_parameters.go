// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDomainPermissionDraftRemoveParams creates a new DomainPermissionDraftRemoveParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDomainPermissionDraftRemoveParams() *DomainPermissionDraftRemoveParams {
	return &DomainPermissionDraftRemoveParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDomainPermissionDraftRemoveParamsWithTimeout creates a new DomainPermissionDraftRemoveParams object
// with the ability to set a timeout on a request.
func NewDomainPermissionDraftRemoveParamsWithTimeout(timeout time.Duration) *DomainPermissionDraftRemoveParams {
	return &DomainPermissionDraftRemoveParams{
		timeout: timeout,
	}
}

// NewDomainPermissionDraftRemoveParamsWithContext creates a new DomainPermissionDraftRemoveParams object
// with the ability to set a context for a request.
func NewDomainPermissionDraftRemoveParamsWithContext(ctx context.Context) *DomainPermissionDraftRemoveParams {
	return &DomainPermissionDraftRemoveParams{
		Context: ctx,
	}
}

// NewDomainPermissionDraftRemoveParamsWithHTTPClient creates a new DomainPermissionDraftRemoveParams object
// with the ability to set a custom HTTPClient for a request.
func NewDomainPermissionDraftRemoveParamsWithHTTPClient(client *http.Client) *DomainPermissionDraftRemoveParams {
	return &DomainPermissionDraftRemoveParams{
		HTTPClient: client,
	}
}

/*
DomainPermissionDraftRemoveParams contains all the parameters to send to the API endpoint

	for the domain permission draft remove operation.

	Typically these are written to a http.Request.
*/
type DomainPermissionDraftRemoveParams struct {

	/* ExcludeTarget.

	   When removing the domain permission draft, also create a domain exclude entry for the target domain, so that drafts will not be created for this domain in the future.
	*/
	ExcludeTarget *bool

	/* ID.

	   ID of the domain permission draft.
	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the domain permission draft remove params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DomainPermissionDraftRemoveParams) WithDefaults() *DomainPermissionDraftRemoveParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the domain permission draft remove params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DomainPermissionDraftRemoveParams) SetDefaults() {
	var (
		excludeTargetDefault = bool(false)
	)

	val := DomainPermissionDraftRemoveParams{
		ExcludeTarget: &excludeTargetDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the domain permission draft remove params
func (o *DomainPermissionDraftRemoveParams) WithTimeout(timeout time.Duration) *DomainPermissionDraftRemoveParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the domain permission draft remove params
func (o *DomainPermissionDraftRemoveParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the domain permission draft remove params
func (o *DomainPermissionDraftRemoveParams) WithContext(ctx context.Context) *DomainPermissionDraftRemoveParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the domain permission draft remove params
func (o *DomainPermissionDraftRemoveParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the domain permission draft remove params
func (o *DomainPermissionDraftRemoveParams) WithHTTPClient(client *http.Client) *DomainPermissionDraftRemoveParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the domain permission draft remove params
func (o *DomainPermissionDraftRemoveParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExcludeTarget adds the excludeTarget to the domain permission draft remove params
func (o *DomainPermissionDraftRemoveParams) WithExcludeTarget(excludeTarget *bool) *DomainPermissionDraftRemoveParams {
	o.SetExcludeTarget(excludeTarget)
	return o
}

// SetExcludeTarget adds the excludeTarget to the domain permission draft remove params
func (o *DomainPermissionDraftRemoveParams) SetExcludeTarget(excludeTarget *bool) {
	o.ExcludeTarget = excludeTarget
}

// WithID adds the id to the domain permission draft remove params
func (o *DomainPermissionDraftRemoveParams) WithID(id string) *DomainPermissionDraftRemoveParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the domain permission draft remove params
func (o *DomainPermissionDraftRemoveParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *DomainPermissionDraftRemoveParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ExcludeTarget != nil {

		// form param exclude_target
		var frExcludeTarget bool
		if o.ExcludeTarget != nil {
			frExcludeTarget = *o.ExcludeTarget
		}
		fExcludeTarget := swag.FormatBool(frExcludeTarget)
		if fExcludeTarget != "" {
			if err := r.SetFormParam("exclude_target", fExcludeTarget); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
