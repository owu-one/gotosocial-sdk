// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owu-one/gotosocial-sdk/models"
)

// DomainPermissionExcludesGetReader is a Reader for the DomainPermissionExcludesGet structure.
type DomainPermissionExcludesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DomainPermissionExcludesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDomainPermissionExcludesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDomainPermissionExcludesGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDomainPermissionExcludesGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDomainPermissionExcludesGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDomainPermissionExcludesGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewDomainPermissionExcludesGetNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDomainPermissionExcludesGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/admin/domain_permission_excludes] domainPermissionExcludesGet", response, response.Code())
	}
}

// NewDomainPermissionExcludesGetOK creates a DomainPermissionExcludesGetOK with default headers values
func NewDomainPermissionExcludesGetOK() *DomainPermissionExcludesGetOK {
	return &DomainPermissionExcludesGetOK{}
}

/*
DomainPermissionExcludesGetOK describes a response with status code 200, with default header values.

Domain permission excludes.
*/
type DomainPermissionExcludesGetOK struct {

	/* Links to the next and previous queries.
	 */
	Link string

	Payload []*models.DomainPermission
}

// IsSuccess returns true when this domain permission excludes get o k response has a 2xx status code
func (o *DomainPermissionExcludesGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this domain permission excludes get o k response has a 3xx status code
func (o *DomainPermissionExcludesGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission excludes get o k response has a 4xx status code
func (o *DomainPermissionExcludesGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this domain permission excludes get o k response has a 5xx status code
func (o *DomainPermissionExcludesGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission excludes get o k response a status code equal to that given
func (o *DomainPermissionExcludesGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the domain permission excludes get o k response
func (o *DomainPermissionExcludesGetOK) Code() int {
	return 200
}

func (o *DomainPermissionExcludesGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetOK %s", 200, payload)
}

func (o *DomainPermissionExcludesGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetOK %s", 200, payload)
}

func (o *DomainPermissionExcludesGetOK) GetPayload() []*models.DomainPermission {
	return o.Payload
}

func (o *DomainPermissionExcludesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Link
	hdrLink := response.GetHeader("Link")

	if hdrLink != "" {
		o.Link = hdrLink
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDomainPermissionExcludesGetBadRequest creates a DomainPermissionExcludesGetBadRequest with default headers values
func NewDomainPermissionExcludesGetBadRequest() *DomainPermissionExcludesGetBadRequest {
	return &DomainPermissionExcludesGetBadRequest{}
}

/*
DomainPermissionExcludesGetBadRequest describes a response with status code 400, with default header values.

bad request
*/
type DomainPermissionExcludesGetBadRequest struct {
}

// IsSuccess returns true when this domain permission excludes get bad request response has a 2xx status code
func (o *DomainPermissionExcludesGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission excludes get bad request response has a 3xx status code
func (o *DomainPermissionExcludesGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission excludes get bad request response has a 4xx status code
func (o *DomainPermissionExcludesGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission excludes get bad request response has a 5xx status code
func (o *DomainPermissionExcludesGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission excludes get bad request response a status code equal to that given
func (o *DomainPermissionExcludesGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the domain permission excludes get bad request response
func (o *DomainPermissionExcludesGetBadRequest) Code() int {
	return 400
}

func (o *DomainPermissionExcludesGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetBadRequest", 400)
}

func (o *DomainPermissionExcludesGetBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetBadRequest", 400)
}

func (o *DomainPermissionExcludesGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludesGetUnauthorized creates a DomainPermissionExcludesGetUnauthorized with default headers values
func NewDomainPermissionExcludesGetUnauthorized() *DomainPermissionExcludesGetUnauthorized {
	return &DomainPermissionExcludesGetUnauthorized{}
}

/*
DomainPermissionExcludesGetUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type DomainPermissionExcludesGetUnauthorized struct {
}

// IsSuccess returns true when this domain permission excludes get unauthorized response has a 2xx status code
func (o *DomainPermissionExcludesGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission excludes get unauthorized response has a 3xx status code
func (o *DomainPermissionExcludesGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission excludes get unauthorized response has a 4xx status code
func (o *DomainPermissionExcludesGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission excludes get unauthorized response has a 5xx status code
func (o *DomainPermissionExcludesGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission excludes get unauthorized response a status code equal to that given
func (o *DomainPermissionExcludesGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the domain permission excludes get unauthorized response
func (o *DomainPermissionExcludesGetUnauthorized) Code() int {
	return 401
}

func (o *DomainPermissionExcludesGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetUnauthorized", 401)
}

func (o *DomainPermissionExcludesGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetUnauthorized", 401)
}

func (o *DomainPermissionExcludesGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludesGetForbidden creates a DomainPermissionExcludesGetForbidden with default headers values
func NewDomainPermissionExcludesGetForbidden() *DomainPermissionExcludesGetForbidden {
	return &DomainPermissionExcludesGetForbidden{}
}

/*
DomainPermissionExcludesGetForbidden describes a response with status code 403, with default header values.

forbidden
*/
type DomainPermissionExcludesGetForbidden struct {
}

// IsSuccess returns true when this domain permission excludes get forbidden response has a 2xx status code
func (o *DomainPermissionExcludesGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission excludes get forbidden response has a 3xx status code
func (o *DomainPermissionExcludesGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission excludes get forbidden response has a 4xx status code
func (o *DomainPermissionExcludesGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission excludes get forbidden response has a 5xx status code
func (o *DomainPermissionExcludesGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission excludes get forbidden response a status code equal to that given
func (o *DomainPermissionExcludesGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the domain permission excludes get forbidden response
func (o *DomainPermissionExcludesGetForbidden) Code() int {
	return 403
}

func (o *DomainPermissionExcludesGetForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetForbidden", 403)
}

func (o *DomainPermissionExcludesGetForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetForbidden", 403)
}

func (o *DomainPermissionExcludesGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludesGetNotFound creates a DomainPermissionExcludesGetNotFound with default headers values
func NewDomainPermissionExcludesGetNotFound() *DomainPermissionExcludesGetNotFound {
	return &DomainPermissionExcludesGetNotFound{}
}

/*
DomainPermissionExcludesGetNotFound describes a response with status code 404, with default header values.

not found
*/
type DomainPermissionExcludesGetNotFound struct {
}

// IsSuccess returns true when this domain permission excludes get not found response has a 2xx status code
func (o *DomainPermissionExcludesGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission excludes get not found response has a 3xx status code
func (o *DomainPermissionExcludesGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission excludes get not found response has a 4xx status code
func (o *DomainPermissionExcludesGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission excludes get not found response has a 5xx status code
func (o *DomainPermissionExcludesGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission excludes get not found response a status code equal to that given
func (o *DomainPermissionExcludesGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the domain permission excludes get not found response
func (o *DomainPermissionExcludesGetNotFound) Code() int {
	return 404
}

func (o *DomainPermissionExcludesGetNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetNotFound", 404)
}

func (o *DomainPermissionExcludesGetNotFound) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetNotFound", 404)
}

func (o *DomainPermissionExcludesGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludesGetNotAcceptable creates a DomainPermissionExcludesGetNotAcceptable with default headers values
func NewDomainPermissionExcludesGetNotAcceptable() *DomainPermissionExcludesGetNotAcceptable {
	return &DomainPermissionExcludesGetNotAcceptable{}
}

/*
DomainPermissionExcludesGetNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type DomainPermissionExcludesGetNotAcceptable struct {
}

// IsSuccess returns true when this domain permission excludes get not acceptable response has a 2xx status code
func (o *DomainPermissionExcludesGetNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission excludes get not acceptable response has a 3xx status code
func (o *DomainPermissionExcludesGetNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission excludes get not acceptable response has a 4xx status code
func (o *DomainPermissionExcludesGetNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this domain permission excludes get not acceptable response has a 5xx status code
func (o *DomainPermissionExcludesGetNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this domain permission excludes get not acceptable response a status code equal to that given
func (o *DomainPermissionExcludesGetNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the domain permission excludes get not acceptable response
func (o *DomainPermissionExcludesGetNotAcceptable) Code() int {
	return 406
}

func (o *DomainPermissionExcludesGetNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetNotAcceptable", 406)
}

func (o *DomainPermissionExcludesGetNotAcceptable) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetNotAcceptable", 406)
}

func (o *DomainPermissionExcludesGetNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDomainPermissionExcludesGetInternalServerError creates a DomainPermissionExcludesGetInternalServerError with default headers values
func NewDomainPermissionExcludesGetInternalServerError() *DomainPermissionExcludesGetInternalServerError {
	return &DomainPermissionExcludesGetInternalServerError{}
}

/*
DomainPermissionExcludesGetInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type DomainPermissionExcludesGetInternalServerError struct {
}

// IsSuccess returns true when this domain permission excludes get internal server error response has a 2xx status code
func (o *DomainPermissionExcludesGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this domain permission excludes get internal server error response has a 3xx status code
func (o *DomainPermissionExcludesGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this domain permission excludes get internal server error response has a 4xx status code
func (o *DomainPermissionExcludesGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this domain permission excludes get internal server error response has a 5xx status code
func (o *DomainPermissionExcludesGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this domain permission excludes get internal server error response a status code equal to that given
func (o *DomainPermissionExcludesGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the domain permission excludes get internal server error response
func (o *DomainPermissionExcludesGetInternalServerError) Code() int {
	return 500
}

func (o *DomainPermissionExcludesGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetInternalServerError", 500)
}

func (o *DomainPermissionExcludesGetInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/admin/domain_permission_excludes][%d] domainPermissionExcludesGetInternalServerError", 500)
}

func (o *DomainPermissionExcludesGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
