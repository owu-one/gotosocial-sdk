// Code generated by go-swagger; DO NOT EDIT.

package lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RemoveListAccountsReader is a Reader for the RemoveListAccounts structure.
type RemoveListAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveListAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveListAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveListAccountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRemoveListAccountsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveListAccountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewRemoveListAccountsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveListAccountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/v1/lists/{id}/accounts] removeListAccounts", response, response.Code())
	}
}

// NewRemoveListAccountsOK creates a RemoveListAccountsOK with default headers values
func NewRemoveListAccountsOK() *RemoveListAccountsOK {
	return &RemoveListAccountsOK{}
}

/*
RemoveListAccountsOK describes a response with status code 200, with default header values.

list accounts updated
*/
type RemoveListAccountsOK struct {
}

// IsSuccess returns true when this remove list accounts o k response has a 2xx status code
func (o *RemoveListAccountsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove list accounts o k response has a 3xx status code
func (o *RemoveListAccountsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove list accounts o k response has a 4xx status code
func (o *RemoveListAccountsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove list accounts o k response has a 5xx status code
func (o *RemoveListAccountsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove list accounts o k response a status code equal to that given
func (o *RemoveListAccountsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remove list accounts o k response
func (o *RemoveListAccountsOK) Code() int {
	return 200
}

func (o *RemoveListAccountsOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsOK", 200)
}

func (o *RemoveListAccountsOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsOK", 200)
}

func (o *RemoveListAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveListAccountsBadRequest creates a RemoveListAccountsBadRequest with default headers values
func NewRemoveListAccountsBadRequest() *RemoveListAccountsBadRequest {
	return &RemoveListAccountsBadRequest{}
}

/*
RemoveListAccountsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type RemoveListAccountsBadRequest struct {
}

// IsSuccess returns true when this remove list accounts bad request response has a 2xx status code
func (o *RemoveListAccountsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove list accounts bad request response has a 3xx status code
func (o *RemoveListAccountsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove list accounts bad request response has a 4xx status code
func (o *RemoveListAccountsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove list accounts bad request response has a 5xx status code
func (o *RemoveListAccountsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove list accounts bad request response a status code equal to that given
func (o *RemoveListAccountsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove list accounts bad request response
func (o *RemoveListAccountsBadRequest) Code() int {
	return 400
}

func (o *RemoveListAccountsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsBadRequest", 400)
}

func (o *RemoveListAccountsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsBadRequest", 400)
}

func (o *RemoveListAccountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveListAccountsUnauthorized creates a RemoveListAccountsUnauthorized with default headers values
func NewRemoveListAccountsUnauthorized() *RemoveListAccountsUnauthorized {
	return &RemoveListAccountsUnauthorized{}
}

/*
RemoveListAccountsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RemoveListAccountsUnauthorized struct {
}

// IsSuccess returns true when this remove list accounts unauthorized response has a 2xx status code
func (o *RemoveListAccountsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove list accounts unauthorized response has a 3xx status code
func (o *RemoveListAccountsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove list accounts unauthorized response has a 4xx status code
func (o *RemoveListAccountsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove list accounts unauthorized response has a 5xx status code
func (o *RemoveListAccountsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this remove list accounts unauthorized response a status code equal to that given
func (o *RemoveListAccountsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the remove list accounts unauthorized response
func (o *RemoveListAccountsUnauthorized) Code() int {
	return 401
}

func (o *RemoveListAccountsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsUnauthorized", 401)
}

func (o *RemoveListAccountsUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsUnauthorized", 401)
}

func (o *RemoveListAccountsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveListAccountsNotFound creates a RemoveListAccountsNotFound with default headers values
func NewRemoveListAccountsNotFound() *RemoveListAccountsNotFound {
	return &RemoveListAccountsNotFound{}
}

/*
RemoveListAccountsNotFound describes a response with status code 404, with default header values.

not found
*/
type RemoveListAccountsNotFound struct {
}

// IsSuccess returns true when this remove list accounts not found response has a 2xx status code
func (o *RemoveListAccountsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove list accounts not found response has a 3xx status code
func (o *RemoveListAccountsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove list accounts not found response has a 4xx status code
func (o *RemoveListAccountsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove list accounts not found response has a 5xx status code
func (o *RemoveListAccountsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove list accounts not found response a status code equal to that given
func (o *RemoveListAccountsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove list accounts not found response
func (o *RemoveListAccountsNotFound) Code() int {
	return 404
}

func (o *RemoveListAccountsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsNotFound", 404)
}

func (o *RemoveListAccountsNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsNotFound", 404)
}

func (o *RemoveListAccountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveListAccountsNotAcceptable creates a RemoveListAccountsNotAcceptable with default headers values
func NewRemoveListAccountsNotAcceptable() *RemoveListAccountsNotAcceptable {
	return &RemoveListAccountsNotAcceptable{}
}

/*
RemoveListAccountsNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type RemoveListAccountsNotAcceptable struct {
}

// IsSuccess returns true when this remove list accounts not acceptable response has a 2xx status code
func (o *RemoveListAccountsNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove list accounts not acceptable response has a 3xx status code
func (o *RemoveListAccountsNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove list accounts not acceptable response has a 4xx status code
func (o *RemoveListAccountsNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove list accounts not acceptable response has a 5xx status code
func (o *RemoveListAccountsNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this remove list accounts not acceptable response a status code equal to that given
func (o *RemoveListAccountsNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the remove list accounts not acceptable response
func (o *RemoveListAccountsNotAcceptable) Code() int {
	return 406
}

func (o *RemoveListAccountsNotAcceptable) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsNotAcceptable", 406)
}

func (o *RemoveListAccountsNotAcceptable) String() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsNotAcceptable", 406)
}

func (o *RemoveListAccountsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveListAccountsInternalServerError creates a RemoveListAccountsInternalServerError with default headers values
func NewRemoveListAccountsInternalServerError() *RemoveListAccountsInternalServerError {
	return &RemoveListAccountsInternalServerError{}
}

/*
RemoveListAccountsInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type RemoveListAccountsInternalServerError struct {
}

// IsSuccess returns true when this remove list accounts internal server error response has a 2xx status code
func (o *RemoveListAccountsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove list accounts internal server error response has a 3xx status code
func (o *RemoveListAccountsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove list accounts internal server error response has a 4xx status code
func (o *RemoveListAccountsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove list accounts internal server error response has a 5xx status code
func (o *RemoveListAccountsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove list accounts internal server error response a status code equal to that given
func (o *RemoveListAccountsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove list accounts internal server error response
func (o *RemoveListAccountsInternalServerError) Code() int {
	return 500
}

func (o *RemoveListAccountsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsInternalServerError", 500)
}

func (o *RemoveListAccountsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/lists/{id}/accounts][%d] removeListAccountsInternalServerError", 500)
}

func (o *RemoveListAccountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
