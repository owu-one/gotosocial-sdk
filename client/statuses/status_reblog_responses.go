// Code generated by go-swagger; DO NOT EDIT.

package statuses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/owu-one/gotosocial-sdk/models"
)

// StatusReblogReader is a Reader for the StatusReblog structure.
type StatusReblogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatusReblogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStatusReblogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStatusReblogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStatusReblogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStatusReblogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStatusReblogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewStatusReblogNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStatusReblogInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/statuses/{id}/reblog] statusReblog", response, response.Code())
	}
}

// NewStatusReblogOK creates a StatusReblogOK with default headers values
func NewStatusReblogOK() *StatusReblogOK {
	return &StatusReblogOK{}
}

/*
StatusReblogOK describes a response with status code 200, with default header values.

The boost of the status.
*/
type StatusReblogOK struct {
	Payload *models.Status
}

// IsSuccess returns true when this status reblog o k response has a 2xx status code
func (o *StatusReblogOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this status reblog o k response has a 3xx status code
func (o *StatusReblogOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this status reblog o k response has a 4xx status code
func (o *StatusReblogOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this status reblog o k response has a 5xx status code
func (o *StatusReblogOK) IsServerError() bool {
	return false
}

// IsCode returns true when this status reblog o k response a status code equal to that given
func (o *StatusReblogOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the status reblog o k response
func (o *StatusReblogOK) Code() int {
	return 200
}

func (o *StatusReblogOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogOK %s", 200, payload)
}

func (o *StatusReblogOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogOK %s", 200, payload)
}

func (o *StatusReblogOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *StatusReblogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatusReblogBadRequest creates a StatusReblogBadRequest with default headers values
func NewStatusReblogBadRequest() *StatusReblogBadRequest {
	return &StatusReblogBadRequest{}
}

/*
StatusReblogBadRequest describes a response with status code 400, with default header values.

bad request
*/
type StatusReblogBadRequest struct {
}

// IsSuccess returns true when this status reblog bad request response has a 2xx status code
func (o *StatusReblogBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this status reblog bad request response has a 3xx status code
func (o *StatusReblogBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this status reblog bad request response has a 4xx status code
func (o *StatusReblogBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this status reblog bad request response has a 5xx status code
func (o *StatusReblogBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this status reblog bad request response a status code equal to that given
func (o *StatusReblogBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the status reblog bad request response
func (o *StatusReblogBadRequest) Code() int {
	return 400
}

func (o *StatusReblogBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogBadRequest", 400)
}

func (o *StatusReblogBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogBadRequest", 400)
}

func (o *StatusReblogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatusReblogUnauthorized creates a StatusReblogUnauthorized with default headers values
func NewStatusReblogUnauthorized() *StatusReblogUnauthorized {
	return &StatusReblogUnauthorized{}
}

/*
StatusReblogUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type StatusReblogUnauthorized struct {
}

// IsSuccess returns true when this status reblog unauthorized response has a 2xx status code
func (o *StatusReblogUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this status reblog unauthorized response has a 3xx status code
func (o *StatusReblogUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this status reblog unauthorized response has a 4xx status code
func (o *StatusReblogUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this status reblog unauthorized response has a 5xx status code
func (o *StatusReblogUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this status reblog unauthorized response a status code equal to that given
func (o *StatusReblogUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the status reblog unauthorized response
func (o *StatusReblogUnauthorized) Code() int {
	return 401
}

func (o *StatusReblogUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogUnauthorized", 401)
}

func (o *StatusReblogUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogUnauthorized", 401)
}

func (o *StatusReblogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatusReblogForbidden creates a StatusReblogForbidden with default headers values
func NewStatusReblogForbidden() *StatusReblogForbidden {
	return &StatusReblogForbidden{}
}

/*
StatusReblogForbidden describes a response with status code 403, with default header values.

forbidden
*/
type StatusReblogForbidden struct {
}

// IsSuccess returns true when this status reblog forbidden response has a 2xx status code
func (o *StatusReblogForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this status reblog forbidden response has a 3xx status code
func (o *StatusReblogForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this status reblog forbidden response has a 4xx status code
func (o *StatusReblogForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this status reblog forbidden response has a 5xx status code
func (o *StatusReblogForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this status reblog forbidden response a status code equal to that given
func (o *StatusReblogForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the status reblog forbidden response
func (o *StatusReblogForbidden) Code() int {
	return 403
}

func (o *StatusReblogForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogForbidden", 403)
}

func (o *StatusReblogForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogForbidden", 403)
}

func (o *StatusReblogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatusReblogNotFound creates a StatusReblogNotFound with default headers values
func NewStatusReblogNotFound() *StatusReblogNotFound {
	return &StatusReblogNotFound{}
}

/*
StatusReblogNotFound describes a response with status code 404, with default header values.

not found
*/
type StatusReblogNotFound struct {
}

// IsSuccess returns true when this status reblog not found response has a 2xx status code
func (o *StatusReblogNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this status reblog not found response has a 3xx status code
func (o *StatusReblogNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this status reblog not found response has a 4xx status code
func (o *StatusReblogNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this status reblog not found response has a 5xx status code
func (o *StatusReblogNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this status reblog not found response a status code equal to that given
func (o *StatusReblogNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the status reblog not found response
func (o *StatusReblogNotFound) Code() int {
	return 404
}

func (o *StatusReblogNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogNotFound", 404)
}

func (o *StatusReblogNotFound) String() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogNotFound", 404)
}

func (o *StatusReblogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatusReblogNotAcceptable creates a StatusReblogNotAcceptable with default headers values
func NewStatusReblogNotAcceptable() *StatusReblogNotAcceptable {
	return &StatusReblogNotAcceptable{}
}

/*
StatusReblogNotAcceptable describes a response with status code 406, with default header values.

not acceptable
*/
type StatusReblogNotAcceptable struct {
}

// IsSuccess returns true when this status reblog not acceptable response has a 2xx status code
func (o *StatusReblogNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this status reblog not acceptable response has a 3xx status code
func (o *StatusReblogNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this status reblog not acceptable response has a 4xx status code
func (o *StatusReblogNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this status reblog not acceptable response has a 5xx status code
func (o *StatusReblogNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this status reblog not acceptable response a status code equal to that given
func (o *StatusReblogNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the status reblog not acceptable response
func (o *StatusReblogNotAcceptable) Code() int {
	return 406
}

func (o *StatusReblogNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogNotAcceptable", 406)
}

func (o *StatusReblogNotAcceptable) String() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogNotAcceptable", 406)
}

func (o *StatusReblogNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatusReblogInternalServerError creates a StatusReblogInternalServerError with default headers values
func NewStatusReblogInternalServerError() *StatusReblogInternalServerError {
	return &StatusReblogInternalServerError{}
}

/*
StatusReblogInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type StatusReblogInternalServerError struct {
}

// IsSuccess returns true when this status reblog internal server error response has a 2xx status code
func (o *StatusReblogInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this status reblog internal server error response has a 3xx status code
func (o *StatusReblogInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this status reblog internal server error response has a 4xx status code
func (o *StatusReblogInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this status reblog internal server error response has a 5xx status code
func (o *StatusReblogInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this status reblog internal server error response a status code equal to that given
func (o *StatusReblogInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the status reblog internal server error response
func (o *StatusReblogInternalServerError) Code() int {
	return 500
}

func (o *StatusReblogInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogInternalServerError", 500)
}

func (o *StatusReblogInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/statuses/{id}/reblog][%d] statusReblogInternalServerError", 500)
}

func (o *StatusReblogInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
