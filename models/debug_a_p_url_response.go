// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DebugAPURLResponse DebugAPUrlResponse provides detailed debug
// information for an AP URL dereference request.
//
// swagger:model DebugAPUrlResponse
type DebugAPURLResponse struct {

	// HTTP headers used in the outgoing request.
	RequestHeaders map[string][]string `json:"request_headers,omitempty"`

	// Remote AP URL that was requested.
	RequestURL string `json:"request_url,omitempty"`

	// Body returned from the remote instance.
	// Will be stringified bytes; may be JSON,
	// may be an error, may be both!
	ResponseBody string `json:"response_body,omitempty"`

	// HTTP response code returned from the remote instance.
	ResponseCode int64 `json:"response_code,omitempty"`

	// HTTP headers returned from the remote instance.
	ResponseHeaders map[string][]string `json:"response_headers,omitempty"`
}

// Validate validates this debug a p Url response
func (m *DebugAPURLResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this debug a p Url response based on context it is used
func (m *DebugAPURLResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DebugAPURLResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DebugAPURLResponse) UnmarshalBinary(b []byte) error {
	var res DebugAPURLResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
